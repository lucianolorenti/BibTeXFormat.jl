bst = Any[Any["FUNCTION",
  Any[Identifier("identify.apacite.version")],
  Any[String("apacite.bst"),
   String(" [2009/03/01 v4.05 APA bibliography style]"),
   Identifier("*"),
   Identifier("top\$")]],
 Any["ENTRY",
  Any[Identifier("address"),
   Identifier("annote"),
   Identifier("annotate"),
   Identifier("author"),
   Identifier("booktitle"),
   Identifier("chair"),
   Identifier("chapter"),
   Identifier("day"),
   Identifier("edition"),
   Identifier("editor"),
   Identifier("englishtitle"),
   Identifier("firstkey"),
   Identifier("howpublished"),
   Identifier("institution"),
   Identifier("journal"),
   Identifier("key"),
   Identifier("lastchecked"),
   Identifier("month"),
   Identifier("note"),
   Identifier("number"),
   Identifier("organization"),
   Identifier("originaladdress"),
   Identifier("originalbooktitle"),
   Identifier("originaledition"),
   Identifier("originaleditor"),
   Identifier("originaljournal"),
   Identifier("originalnumber"),
   Identifier("originalpages"),
   Identifier("originalpublisher"),
   Identifier("originalvolume"),
   Identifier("originalyear"),
   Identifier("pages"),
   Identifier("publisher"),
   Identifier("school"),
   Identifier("series"),
   Identifier("symposium"),
   Identifier("text"),
   Identifier("title"),
   Identifier("translator"),
   Identifier("type"),
   Identifier("url"),
   Identifier("volume"),
   Identifier("year")],
  Any[Identifier("title.number"),
   Identifier("cite.initials"),
   Identifier("cite.num.names.full"),
   Identifier("cite.num.names.short"),
   Identifier("add.to.year")],
  Any[Identifier("year.label"),
   Identifier("author.year.sort.label"),
   Identifier("title.sort.label"),
   Identifier("type.2")]],
 Any["INTEGERS",
  Any[Identifier("len"),
   Identifier("pos"),
   Identifier("name.max"),
   Identifier("old.number"),
   Identifier("numnames"),
   Identifier("numnames.old"),
   Identifier("nameptr"),
   Identifier("lastname"),
   Identifier("format.num.names"),
   Identifier("cite.initials.old"),
   Identifier("cite.num.names.old"),
   Identifier("add.to.year.old"),
   Identifier("forward"),
   Identifier("multiresult"),
   Identifier("dot"),
   Identifier("brace.level")]],
 Any["STRINGS",
  Any[Identifier("s"),
   Identifier("t"),
   Identifier("u"),
   Identifier("old.label"),
   Identifier("field"),
   Identifier("aut1f"),
   Identifier("aut1s"),
   Identifier("aut1f.old"),
   Identifier("aut1s.old"),
   Identifier("aut2"),
   Identifier("aut2.old"),
   Identifier("aut3"),
   Identifier("aut3.old"),
   Identifier("aut4"),
   Identifier("aut4.old"),
   Identifier("aut5"),
   Identifier("aut5.old"),
   Identifier("aut6"),
   Identifier("aut6.old"),
   Identifier("year.label.old")]],
 Any["FUNCTION", Any[Identifier("test")], Any[Integer(0)]],
 Any["FUNCTION", Any[Identifier("make.index")], Any[Integer(0)]],
 Any["MACRO", Any[Identifier("jan")], Any[String("{\\APACmonth{01}}")]],
 Any["MACRO", Any[Identifier("feb")], Any[String("{\\APACmonth{02}}")]],
 Any["MACRO", Any[Identifier("mar")], Any[String("{\\APACmonth{03}}")]],
 Any["MACRO", Any[Identifier("apr")], Any[String("{\\APACmonth{04}}")]],
 Any["MACRO", Any[Identifier("may")], Any[String("{\\APACmonth{05}}")]],
 Any["MACRO", Any[Identifier("jun")], Any[String("{\\APACmonth{06}}")]],
 Any["MACRO", Any[Identifier("jul")], Any[String("{\\APACmonth{07}}")]],
 Any["MACRO", Any[Identifier("aug")], Any[String("{\\APACmonth{08}}")]],
 Any["MACRO", Any[Identifier("sep")], Any[String("{\\APACmonth{09}}")]],
 Any["MACRO", Any[Identifier("oct")], Any[String("{\\APACmonth{10}}")]],
 Any["MACRO", Any[Identifier("nov")], Any[String("{\\APACmonth{11}}")]],
 Any["MACRO", Any[Identifier("dec")], Any[String("{\\APACmonth{12}}")]],
 Any["MACRO", Any[Identifier("winter")], Any[String("{\\APACmonth{13}}")]],
 Any["MACRO", Any[Identifier("spring")], Any[String("{\\APACmonth{14}}")]],
 Any["MACRO", Any[Identifier("summer")], Any[String("{\\APACmonth{15}}")]],
 Any["MACRO", Any[Identifier("fall")], Any[String("{\\APACmonth{16}}")]],
 Any["FUNCTION",
  Any[Identifier("not")],
  Any[FunctionLiteral(Any[Integer(0)]),
   FunctionLiteral(Any[Integer(1)]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("and")],
  Any[QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("pop\$"), Integer(0)]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("or")],
  Any[FunctionLiteral(Any[Identifier("pop\$"), Integer(1)]),
   QuotedVar("skip\$"),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("warning.if.empty")],
  Any[Identifier("empty\$"),
   FunctionLiteral(Any[String("No "), Identifier("swap\$"), Identifier("*"), String(" in "), Identifier("*"), Identifier("cite\$"), Identifier("*"), Identifier("warning\$")]),
   FunctionLiteral(Any[Identifier("pop\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("check.relevant.fields")],
  Any[Identifier("title"),
   Identifier("empty\$"),
   Identifier("type"),
   Identifier("empty\$"),
   Identifier("and"),
   Identifier("howpublished"),
   Identifier("empty\$"),
   Identifier("and"),
   FunctionLiteral(Any[String("No title, type, and howpublished in "), Identifier("cite\$"), Identifier("*"), Identifier("warning\$")]),
   QuotedVar("skip\$"),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("editor.ne.trans")],
  Any[Identifier("translator"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Integer(0)]),
   FunctionLiteral(Any[Identifier("editor"), Identifier("empty\$"), FunctionLiteral(Any[Integer(0)]), FunctionLiteral(Any[Identifier("translator"), Identifier("editor"), Identifier("="), FunctionLiteral(Any[Integer(0)]), FunctionLiteral(Any[Integer(1)]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("conv.int.to.str")],
  Any[Identifier("duplicate\$"),
   Integer(10),
   Identifier("<"),
   FunctionLiteral(Any[String("0000"), Identifier("swap\$"), Identifier("int.to.str\$"), Identifier("*")]),
   FunctionLiteral(Any[Identifier("duplicate\$"), Integer(100), Identifier("<"), FunctionLiteral(Any[String("000"), Identifier("swap\$"), Identifier("int.to.str\$"), Identifier("*")]), FunctionLiteral(Any[Identifier("duplicate\$"), Integer(1000), Identifier("<"), FunctionLiteral(Any[String("00"), Identifier("swap\$"), Identifier("int.to.str\$"), Identifier("*")]), FunctionLiteral(Any[Identifier("duplicate\$"), Integer(10000), Identifier("<"), FunctionLiteral(Any[String("0"), Identifier("swap\$"), Identifier("int.to.str\$"), Identifier("*")]), FunctionLiteral(Any[Identifier("int.to.str\$")]), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("ref.type")],
  Any[Identifier("type\$"),
   String("article"),
   Identifier("="),
   Identifier("type\$"),
   String("magazine"),
   Identifier("="),
   Identifier("type\$"),
   String("newspaper"),
   Identifier("="),
   Identifier("type\$"),
   String("book"),
   Identifier("="),
   Identifier("type\$"),
   String("techreport"),
   Identifier("="),
   Identifier("type\$"),
   String("unpublished"),
   Identifier("="),
   Identifier("type\$"),
   String("misc"),
   Identifier("="),
   Identifier("type\$"),
   String("booklet"),
   Identifier("="),
   Identifier("type\$"),
   String("manual"),
   Identifier("="),
   Identifier("type\$"),
   String("proceedings"),
   Identifier("="),
   Identifier("or"),
   Identifier("or"),
   Identifier("or"),
   Identifier("or"),
   Identifier("or"),
   Identifier("or"),
   Identifier("or"),
   Identifier("or"),
   Identifier("or"),
   FunctionLiteral(Any[Integer(1)]),
   FunctionLiteral(Any[Identifier("type\$"), String("incollection"), Identifier("="), Identifier("type\$"), String("phdthesis"), Identifier("="), Identifier("type\$"), String("mastersthesis"), Identifier("="), Identifier("type\$"), String("lecture"), Identifier("="), Identifier("type\$"), String("inbook"), Identifier("="), Identifier("type\$"), String("inproceedings"), Identifier("="), Identifier("type\$"), String("conference"), Identifier("="), Identifier("type\$"), String("intechreport"), Identifier("="), Identifier("or"), Identifier("or"), Identifier("or"), Identifier("or"), Identifier("or"), Identifier("or"), Identifier("or"), FunctionLiteral(Any[Integer(2)]), FunctionLiteral(Any[Identifier("type\$"), String("literal"), Identifier("="), FunctionLiteral(Any[Integer(3)]), FunctionLiteral(Any[Integer(0)]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("is.atype")],
  Any[Identifier("type\$"),
   String("article"),
   Identifier("="),
   Identifier("type\$"),
   String("magazine"),
   Identifier("="),
   Identifier("type\$"),
   String("newspaper"),
   Identifier("="),
   Identifier("type\$"),
   String("incollection"),
   Identifier("="),
   Identifier("type\$"),
   String("inbook"),
   Identifier("="),
   Identifier("type\$"),
   String("inproceedings"),
   Identifier("="),
   Identifier("type\$"),
   String("conference"),
   Identifier("="),
   Identifier("type\$"),
   String("intechreport"),
   Identifier("="),
   Identifier("type\$"),
   String("manual"),
   Identifier("="),
   Identifier("or"),
   Identifier("or"),
   Identifier("or"),
   Identifier("or"),
   Identifier("or"),
   Identifier("or"),
   Identifier("or"),
   Identifier("or"),
   FunctionLiteral(Any[Integer(1)]),
   FunctionLiteral(Any[Identifier("journal"), Identifier("empty\$"), Identifier("not"), Identifier("type\$"), String("phdthesis"), Identifier("="), Identifier("type\$"), String("mastersthesis"), Identifier("="), Identifier("or"), Identifier("and"), FunctionLiteral(Any[Integer(1)]), FunctionLiteral(Any[Identifier("type\$"), String("misc"), Identifier("="), Identifier("type"), Identifier("empty\$"), Identifier("not"), Identifier("and"), FunctionLiteral(Any[Identifier("type"), String("\\bibmessage"), Identifier("="), Identifier("type"), String("\\bibcomputerprogram"), Identifier("="), Identifier("type"), String("\\bibcomputerprogrammanual"), Identifier("="), Identifier("type"), String("\\bibcomputerprogramandmanual"), Identifier("="), Identifier("type"), String("\\bibcomputersoftware"), Identifier("="), Identifier("type"), String("\\bibcomputersoftwaremanual"), Identifier("="), Identifier("type"), String("\\bibcomputersoftwareandmanual"), Identifier("="), Identifier("type"), String("\\bibprogramminglanguage"), Identifier("="), Identifier("or"), Identifier("or"), Identifier("or"), Identifier("or"), Identifier("or"), Identifier("or"), Identifier("or"), FunctionLiteral(Any[Integer(1)]), FunctionLiteral(Any[Integer(0)]), Identifier("if\$")]), FunctionLiteral(Any[Integer(0)]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("connect.check")],
  Any[QuotedVar("u"),
   Identifier(":="),
   Identifier("duplicate\$"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("pop\$"), Identifier("duplicate\$"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("pop\$"), String("")]), QuotedVar("skip\$"), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("swap\$"), Identifier("duplicate\$"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("pop\$")]), FunctionLiteral(Any[Identifier("u"), Identifier("*"), Identifier("swap\$"), Identifier("*")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("tie.or.space.connect")],
  Any[Identifier("duplicate\$"),
   Identifier("text.length\$"),
   Integer(4),
   Identifier("<"),
   FunctionLiteral(Any[String("~")]),
   FunctionLiteral(Any[String("\\ ")]),
   Identifier("if\$"),
   Identifier("swap\$"),
   Identifier("*"),
   Identifier("*")]],
 Any["FUNCTION",
  Any[Identifier("connect.with.comma.check")],
  Any[String(", "), Identifier("connect.check")]],
 Any["FUNCTION",
  Any[Identifier("connect.with.semicolon.check")],
  Any[String("; "), Identifier("connect.check")]],
 Any["FUNCTION",
  Any[Identifier("connect.with.colon.check")],
  Any[String(": "), Identifier("connect.check")]],
 Any["FUNCTION",
  Any[Identifier("connect.with.space.check")],
  Any[String("\\ "), Identifier("connect.check")]],
 Any["FUNCTION",
  Any[Identifier("enclose.check")],
  Any[Identifier("duplicate\$"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("pop\$"), Identifier("pop\$"), Identifier("pop\$"), String("")]),
   FunctionLiteral(Any[Identifier("swap\$"), Identifier("*"), Identifier("*")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("emphasize.check")],
  Any[String("\\Bem{"),
   Identifier("swap\$"),
   String("}"),
   Identifier("swap\$"),
   Identifier("enclose.check")]],
 Any["FUNCTION",
  Any[Identifier("bracket.check")],
  Any[String("["),
   Identifier("swap\$"),
   String("]"),
   Identifier("swap\$"),
   Identifier("enclose.check")]],
 Any["FUNCTION",
  Any[Identifier("parenthesize.check")],
  Any[String("("),
   Identifier("swap\$"),
   String(")"),
   Identifier("swap\$"),
   Identifier("enclose.check")]],
 Any["FUNCTION",
  Any[Identifier("multi.result.check")],
  Any[QuotedVar("t"),
   Identifier(":="),
   Integer(0),
   QuotedVar("multiresult"),
   Identifier(":="),
   FunctionLiteral(Any[Identifier("multiresult"), Identifier("not"), Identifier("t"), Identifier("text.length\$"), Integer(1), Identifier(">"), Identifier("and")]),
   FunctionLiteral(Any[Identifier("t"), Integer(1), Integer(2), Identifier("substring\$"), QuotedVar("s"), Identifier(":="), String("--"), Identifier("s"), Identifier("="), FunctionLiteral(Any[Integer(1), QuotedVar("multiresult"), Identifier(":=")]), FunctionLiteral(Any[Identifier("t"), Integer(1), Integer(1), Identifier("substring\$"), QuotedVar("s"), Identifier(":="), String("+"), Identifier("s"), Identifier("="), String(","), Identifier("s"), Identifier("="), Identifier("or"), FunctionLiteral(Any[Integer(1), QuotedVar("multiresult"), Identifier(":=")]), FunctionLiteral(Any[Identifier("t"), Integer(2), Identifier("global.max\$"), Identifier("substring\$"), QuotedVar("t"), Identifier(":=")]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("while\$"),
   Identifier("multiresult")]],
 Any["FUNCTION",
  Any[Identifier("is.bibcorporate")],
  Any[Integer(1),
   Integer(14),
   Identifier("substring\$"),
   String("{\\bibcorporate"),
   Identifier("=")]],
 Any["FUNCTION",
  Any[Identifier("sortify")],
  Any[Identifier("purify\$"), String("l"), Identifier("change.case\$")]],
 Any["FUNCTION",
  Any[Identifier("remove.spaces")],
  Any[QuotedVar("s"),
   Identifier(":="),
   Identifier("s"),
   Identifier("text.length\$"),
   QuotedVar("len"),
   Identifier(":="),
   String(""),
   QuotedVar("t"),
   Identifier(":="),
   Integer(0),
   QuotedVar("pos"),
   Identifier(":="),
   FunctionLiteral(Any[Identifier("pos"), Identifier("len"), Identifier("<")]),
   FunctionLiteral(Any[Identifier("pos"), Integer(1), Identifier("+"), QuotedVar("pos"), Identifier(":="), Identifier("s"), Identifier("pos"), Integer(1), Identifier("substring\$"), QuotedVar("u"), Identifier(":="), Identifier("u"), String(" "), Identifier("="), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("t"), Identifier("u"), Identifier("*"), QuotedVar("t"), Identifier(":=")]), Identifier("if\$")]),
   Identifier("while\$"),
   Identifier("t")]],
 Any["FUNCTION",
  Any[Identifier("output.end.block")],
  Any[Identifier("write\$"), Identifier("newline\$")]],
 Any["FUNCTION",
  Any[Identifier("output.new.block")],
  Any[Identifier("output.end.block"),
   String("\\newblock"),
   Identifier("write\$"),
   Identifier("newline\$")]],
 Any["FUNCTION",
  Any[Identifier("output.dot.new.block")],
  Any[Identifier("add.period\$"), Identifier("output.new.block")]],
 Any["FUNCTION",
  Any[Identifier("start.new.block")],
  Any[Identifier("newline\$"),
   String("\\unskip\\ "),
   Identifier("write\$"),
   Identifier("newline\$"),
   String("\\newblock "),
   Identifier("write\$"),
   Identifier("newline\$")]],
 Any["FUNCTION",
  Any[Identifier("fin.entry")],
  Any[Identifier("output.end.block"),
   String("\\PrintBackRefs{\\CurrentBib}"),
   Identifier("write\$"),
   Identifier("newline\$"),
   Identifier("test"),
   FunctionLiteral(Any[String("\\vspace{\\baselineskip}"), Identifier("write\$"), Identifier("newline\$")]),
   QuotedVar("skip\$"),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("sort.name.format")],
  Any[String("{ll{}}{  f{}}{  vv{}}{  jj{}}")]],
 Any["FUNCTION", Any[Identifier("cite.name.format")], Any[String("{ll}")]],
 Any["FUNCTION",
  Any[Identifier("cite.initials.name.format")],
  Any[String("{f{\\BPBI }.~~}{vv }{ll}{ jj}")]],
 Any["FUNCTION",
  Any[Identifier("author.name.format")],
  Any[String("{ll}{, f{\\BPBI }.}{ vv}{, jj}")]],
 Any["FUNCTION",
  Any[Identifier("editor.name.format")],
  Any[String("{f{\\BPBI }.~~}{vv }{ll}{ jj}")]],
 Any["FUNCTION",
  Any[Identifier("index.name.format")],
  Any[String("{ll}{, f{\\BPBI }.}{ vv}{, jj}")]],
 Any["FUNCTION",
  Any[Identifier("init.initials")],
  Any[String("yyyyy"),
   QuotedVar("aut1f.old"),
   Identifier(":="),
   String("yyyyy"),
   QuotedVar("aut1s.old"),
   Identifier(":="),
   Integer(0),
   QuotedVar("cite.initials.old"),
   Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("update.no.initials")],
  Any[QuotedVar("field"),
   Identifier(":="),
   Identifier("field"),
   QuotedVar("aut1f.old"),
   Identifier(":="),
   Identifier("field"),
   QuotedVar("aut1s.old"),
   Identifier(":="),
   Integer(0),
   QuotedVar("cite.initials.old"),
   Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("check.add.initials.aut")],
  Any[Identifier("aut1s"),
   Identifier("aut1s.old"),
   Identifier("="),
   FunctionLiteral(Any[Identifier("aut1f"), Identifier("aut1f.old"), Identifier("="), FunctionLiteral(Any[Identifier("cite.initials.old"), QuotedVar("cite.initials"), Identifier(":=")]), FunctionLiteral(Any[Integer(1), QuotedVar("cite.initials"), Identifier(":="), Identifier("aut1f"), QuotedVar("aut1f.old"), Identifier(":="), Identifier("aut1s"), QuotedVar("aut1s.old"), Identifier(":="), Identifier("cite.initials"), QuotedVar("cite.initials.old"), Identifier(":=")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("aut1f"), QuotedVar("aut1f.old"), Identifier(":="), Identifier("aut1s"), QuotedVar("aut1s.old"), Identifier(":="), Identifier("cite.initials"), QuotedVar("cite.initials.old"), Identifier(":=")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("check.add.initials.field")],
  Any[QuotedVar("field"),
   Identifier(":="),
   Identifier("field"),
   Integer(1),
   Identifier("cite.initials.name.format"),
   Identifier("format.name\$"),
   QuotedVar("aut1f"),
   Identifier(":="),
   Identifier("field"),
   Integer(1),
   Identifier("cite.name.format"),
   Identifier("format.name\$"),
   QuotedVar("aut1s"),
   Identifier(":="),
   Identifier("check.add.initials.aut")]],
 Any["FUNCTION",
  Any[Identifier("check.add.initials")],
  Any[Identifier("firstkey"),
   Identifier("empty\$"),
   Identifier("not"),
   FunctionLiteral(Any[Identifier("key"), Identifier("empty\$"), Identifier("not"), FunctionLiteral(Any[Identifier("firstkey"), Identifier("sortify"), Identifier("remove.spaces"), QuotedVar("aut1f"), Identifier(":="), Identifier("key"), Identifier("sortify"), Identifier("remove.spaces"), QuotedVar("aut1s"), Identifier(":="), Identifier("check.add.initials.aut")]), FunctionLiteral(Any[Identifier("firstkey"), Identifier("sortify"), Identifier("remove.spaces"), Identifier("update.no.initials")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("key"), Identifier("empty\$"), Identifier("not"), FunctionLiteral(Any[Identifier("key"), Identifier("sortify"), Identifier("remove.spaces"), Identifier("update.no.initials")]), FunctionLiteral(Any[Identifier("ref.type"), Integer(2), Identifier("="), FunctionLiteral(Any[Identifier("author"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("title.sort.label"), Identifier("update.no.initials")]), FunctionLiteral(Any[Identifier("author"), Identifier("check.add.initials.field")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("author"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("editor"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("title.sort.label"), Identifier("update.no.initials")]), FunctionLiteral(Any[Identifier("editor"), Identifier("check.add.initials.field")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("author"), Identifier("check.add.initials.field")]), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("tentative.cite.num.names.field")],
  Any[QuotedVar("field"),
   Identifier(":="),
   Identifier("field"),
   Identifier("num.names\$"),
   QuotedVar("numnames"),
   Identifier(":="),
   Identifier("numnames"),
   Integer(3),
   Identifier("<"),
   FunctionLiteral(Any[Identifier("numnames"), QuotedVar("cite.num.names.full"), Identifier(":="), Identifier("numnames"), QuotedVar("cite.num.names.short"), Identifier(":=")]),
   FunctionLiteral(Any[Identifier("numnames"), Integer(6), Identifier("<"), FunctionLiteral(Any[Identifier("numnames"), QuotedVar("cite.num.names.full"), Identifier(":="), Integer(1), QuotedVar("cite.num.names.short"), Identifier(":=")]), FunctionLiteral(Any[Integer(1), QuotedVar("cite.num.names.full"), Identifier(":="), Integer(1), QuotedVar("cite.num.names.short"), Identifier(":=")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("tentative.cite.num.names")],
  Any[Identifier("firstkey"),
   Identifier("empty\$"),
   Identifier("not"),
   FunctionLiteral(Any[Integer(1), QuotedVar("cite.num.names.full"), Identifier(":="), Integer(1), QuotedVar("cite.num.names.short"), Identifier(":=")]),
   FunctionLiteral(Any[Identifier("key"), Identifier("empty\$"), Identifier("not"), FunctionLiteral(Any[Integer(1), QuotedVar("cite.num.names.full"), Identifier(":="), Integer(1), QuotedVar("cite.num.names.short"), Identifier(":=")]), FunctionLiteral(Any[Identifier("ref.type"), Integer(2), Identifier("="), FunctionLiteral(Any[Identifier("author"), Identifier("empty\$"), FunctionLiteral(Any[Integer(1), QuotedVar("cite.num.names.full"), Identifier(":="), Integer(1), QuotedVar("cite.num.names.short"), Identifier(":=")]), FunctionLiteral(Any[Identifier("author"), Identifier("tentative.cite.num.names.field")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("author"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("editor"), Identifier("empty\$"), FunctionLiteral(Any[Integer(1), QuotedVar("cite.num.names.full"), Identifier(":="), Integer(1), QuotedVar("cite.num.names.short"), Identifier(":=")]), FunctionLiteral(Any[Identifier("editor"), Identifier("tentative.cite.num.names.field")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("author"), Identifier("tentative.cite.num.names.field")]), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("init.cite.num.names")],
  Any[Integer(0),
   QuotedVar("cite.num.names.old"),
   Identifier(":="),
   Integer(0),
   QuotedVar("numnames.old"),
   Identifier(":="),
   String("yyyy"),
   QuotedVar("year.label.old"),
   Identifier(":="),
   Integer(0),
   QuotedVar("add.to.year.old"),
   Identifier(":="),
   String(""),
   QuotedVar("aut1f.old"),
   Identifier(":="),
   String(""),
   QuotedVar("aut2.old"),
   Identifier(":="),
   String(""),
   QuotedVar("aut3.old"),
   Identifier(":="),
   String(""),
   QuotedVar("aut4.old"),
   Identifier(":="),
   String(""),
   QuotedVar("aut5.old"),
   Identifier(":="),
   String(""),
   QuotedVar("aut6.old"),
   Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("update.cite.num.names")],
  Any[Identifier("cite.num.names.short"),
   QuotedVar("cite.num.names.old"),
   Identifier(":="),
   Identifier("numnames"),
   QuotedVar("numnames.old"),
   Identifier(":="),
   Identifier("year.label"),
   QuotedVar("year.label.old"),
   Identifier(":="),
   Identifier("add.to.year"),
   QuotedVar("add.to.year.old"),
   Identifier(":="),
   Identifier("aut1f"),
   QuotedVar("aut1f.old"),
   Identifier(":="),
   Identifier("aut2"),
   QuotedVar("aut2.old"),
   Identifier(":="),
   Identifier("aut3"),
   QuotedVar("aut3.old"),
   Identifier(":="),
   Identifier("aut4"),
   QuotedVar("aut4.old"),
   Identifier(":="),
   Identifier("aut5"),
   QuotedVar("aut5.old"),
   Identifier(":="),
   Identifier("aut6"),
   QuotedVar("aut6.old"),
   Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("format.6.authors")],
  Any[Identifier("field"),
   Integer(1),
   Identifier("cite.initials.name.format"),
   Identifier("format.name\$"),
   QuotedVar("aut1f"),
   Identifier(":="),
   Identifier("numnames"),
   Integer(1),
   Identifier(">"),
   Identifier("name.max"),
   Integer(1),
   Identifier(">"),
   Identifier("and"),
   FunctionLiteral(Any[Identifier("field"), Integer(2), Identifier("cite.name.format"), Identifier("format.name\$"), QuotedVar("aut2"), Identifier(":="), Identifier("numnames"), Integer(2), Identifier(">"), Identifier("name.max"), Integer(2), Identifier(">"), Identifier("and"), FunctionLiteral(Any[Identifier("field"), Integer(3), Identifier("cite.name.format"), Identifier("format.name\$"), QuotedVar("aut3"), Identifier(":="), Identifier("numnames"), Integer(3), Identifier(">"), Identifier("name.max"), Integer(3), Identifier(">"), Identifier("and"), FunctionLiteral(Any[Identifier("field"), Integer(4), Identifier("cite.name.format"), Identifier("format.name\$"), QuotedVar("aut4"), Identifier(":="), Identifier("numnames"), Integer(4), Identifier(">"), Identifier("name.max"), Integer(4), Identifier(">"), Identifier("and"), FunctionLiteral(Any[Identifier("field"), Integer(5), Identifier("cite.name.format"), Identifier("format.name\$"), QuotedVar("aut5"), Identifier(":="), Identifier("numnames"), Integer(5), Identifier(">"), Identifier("name.max"), Integer(5), Identifier(">"), Identifier("and"), FunctionLiteral(Any[Identifier("field"), Integer(6), Identifier("cite.name.format"), Identifier("format.name\$"), QuotedVar("aut6"), Identifier(":=")]), FunctionLiteral(Any[String(""), QuotedVar("aut6"), Identifier(":=")]), Identifier("if\$")]), FunctionLiteral(Any[String(""), QuotedVar("aut5"), Identifier(":="), String(""), QuotedVar("aut6"), Identifier(":=")]), Identifier("if\$")]), FunctionLiteral(Any[String(""), QuotedVar("aut4"), Identifier(":="), String(""), QuotedVar("aut5"), Identifier(":="), String(""), QuotedVar("aut6"), Identifier(":=")]), Identifier("if\$")]), FunctionLiteral(Any[String(""), QuotedVar("aut3"), Identifier(":="), String(""), QuotedVar("aut4"), Identifier(":="), String(""), QuotedVar("aut5"), Identifier(":="), String(""), QuotedVar("aut6"), Identifier(":=")]), Identifier("if\$")]),
   FunctionLiteral(Any[String(""), QuotedVar("aut2"), Identifier(":="), String(""), QuotedVar("aut3"), Identifier(":="), String(""), QuotedVar("aut4"), Identifier(":="), String(""), QuotedVar("aut5"), Identifier(":="), String(""), QuotedVar("aut6"), Identifier(":=")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("change.add.to.year")],
  Any[Identifier("forward"),
   Integer(1),
   Identifier("="),
   FunctionLiteral(Any[Identifier("add.to.year.old"), Integer(0), Identifier(">"), FunctionLiteral(Any[Identifier("add.to.year.old"), Integer(1), Identifier("+"), QuotedVar("add.to.year"), Identifier(":=")]), FunctionLiteral(Any[Integer(2), QuotedVar("add.to.year"), Identifier(":=")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("add.to.year.old"), Integer(1), Identifier("-"), QuotedVar("add.to.year"), Identifier(":=")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("definitive.cite.num.names.1.or.2")],
  Any[Identifier("numnames"),
   Identifier("numnames.old"),
   Identifier("="),
   FunctionLiteral(Any[Identifier("aut1f"), Identifier("aut1f.old"), Identifier("="), FunctionLiteral(Any[Identifier("aut2"), Identifier("aut2.old"), Identifier("="), Identifier("numnames"), Integer(2), Identifier("="), Identifier("and"), Identifier("numnames"), Integer(1), Identifier("="), Identifier("or"), FunctionLiteral(Any[Identifier("change.add.to.year")]), FunctionLiteral(Any[Identifier("skip\$")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("skip\$")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("skip\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("definitive.cite.num.names.3.or.more")],
  Any[Identifier("aut1f"),
   Identifier("aut1f.old"),
   Identifier("="),
   FunctionLiteral(Any[Identifier("aut2"), Identifier("aut2.old"), Identifier("="), FunctionLiteral(Any[Identifier("aut3"), Identifier("aut3.old"), Identifier("="), FunctionLiteral(Any[Identifier("numnames.old"), Integer(3), Identifier("="), FunctionLiteral(Any[Identifier("numnames"), Integer(3), Identifier("="), FunctionLiteral(Any[Identifier("change.add.to.year"), Identifier("cite.num.names.short"), Identifier("cite.num.names.old"), Identifier("<"), FunctionLiteral(Any[Identifier("cite.num.names.old"), QuotedVar("cite.num.names.short"), Identifier(":=")]), QuotedVar("skip\$"), Identifier("if\$")]), FunctionLiteral(Any[Identifier("cite.num.names.short"), Integer(4), Identifier("<"), FunctionLiteral(Any[Integer(4), QuotedVar("cite.num.names.short"), Identifier(":=")]), QuotedVar("skip\$"), Identifier("if\$")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("numnames"), Integer(3), Identifier("="), FunctionLiteral(Any[Identifier("numnames"), QuotedVar("cite.num.names.short"), Identifier(":=")]), FunctionLiteral(Any[Identifier("aut4"), Identifier("aut4.old"), Identifier("="), FunctionLiteral(Any[Identifier("numnames.old"), Integer(4), Identifier("="), FunctionLiteral(Any[Identifier("numnames"), Integer(4), Identifier("="), FunctionLiteral(Any[Identifier("change.add.to.year"), Identifier("cite.num.names.short"), Identifier("cite.num.names.old"), Identifier("<"), FunctionLiteral(Any[Identifier("cite.num.names.old"), QuotedVar("cite.num.names.short"), Identifier(":=")]), QuotedVar("skip\$"), Identifier("if\$")]), FunctionLiteral(Any[Identifier("cite.num.names.short"), Integer(5), Identifier("<"), FunctionLiteral(Any[Integer(5), QuotedVar("cite.num.names.short"), Identifier(":=")]), QuotedVar("skip\$"), Identifier("if\$")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("numnames"), Integer(4), Identifier("="), FunctionLiteral(Any[Identifier("numnames"), QuotedVar("cite.num.names.short"), Identifier(":=")]), FunctionLiteral(Any[Identifier("aut5"), Identifier("aut5.old"), Identifier("="), FunctionLiteral(Any[Identifier("numnames.old"), Integer(5), Identifier("="), FunctionLiteral(Any[Identifier("numnames"), Integer(5), Identifier("="), FunctionLiteral(Any[Identifier("change.add.to.year"), Identifier("cite.num.names.short"), Identifier("cite.num.names.old"), Identifier("<"), FunctionLiteral(Any[Identifier("cite.num.names.old"), QuotedVar("cite.num.names.short"), Identifier(":=")]), QuotedVar("skip\$"), Identifier("if\$")]), FunctionLiteral(Any[Identifier("cite.num.names.short"), Integer(6), Identifier("<"), FunctionLiteral(Any[Integer(6), QuotedVar("cite.num.names.short"), Identifier(":=")]), QuotedVar("skip\$"), Identifier("if\$")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("numnames"), Integer(5), Identifier("="), FunctionLiteral(Any[Identifier("numnames"), QuotedVar("cite.num.names.short"), Identifier(":=")]), FunctionLiteral(Any[Identifier("numnames"), Integer(6), Identifier(">"), Identifier("numnames.old"), Integer(6), Identifier("="), Identifier("and"), Identifier("numnames"), Integer(6), Identifier("="), Identifier("numnames.old"), Integer(6), Identifier(">"), Identifier("and"), Identifier("or"), Identifier("aut6"), Identifier("aut6.old"), Identifier("="), Identifier("not"), Identifier("or"), FunctionLiteral(Any[Integer(6), Identifier("cite.num.names.short"), Identifier("<"), FunctionLiteral(Any[Integer(6), QuotedVar("cite.num.names.short"), Identifier(":=")]), QuotedVar("skip\$"), Identifier("if\$")]), FunctionLiteral(Any[Identifier("change.add.to.year"), Identifier("cite.num.names.short"), Identifier("cite.num.names.old"), Identifier("<"), FunctionLiteral(Any[Identifier("cite.num.names.old"), QuotedVar("cite.num.names.short"), Identifier(":=")]), QuotedVar("skip\$"), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("cite.num.names.short"), Integer(5), Identifier("<"), FunctionLiteral(Any[Integer(5), QuotedVar("cite.num.names.short"), Identifier(":=")]), QuotedVar("skip\$"), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("cite.num.names.short"), Integer(4), Identifier("<"), FunctionLiteral(Any[Integer(4), QuotedVar("cite.num.names.short"), Identifier(":=")]), QuotedVar("skip\$"), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("cite.num.names.short"), Integer(3), Identifier("<"), FunctionLiteral(Any[Integer(3), QuotedVar("cite.num.names.short"), Identifier(":=")]), QuotedVar("skip\$"), Identifier("if\$")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("cite.num.names.short"), Integer(2), Identifier("<"), FunctionLiteral(Any[Integer(2), QuotedVar("cite.num.names.short"), Identifier(":=")]), QuotedVar("skip\$"), Identifier("if\$")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("skip\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("definitive.cite.num.names.field")],
  Any[QuotedVar("field"),
   Identifier(":="),
   Identifier("field"),
   Identifier("num.names\$"),
   QuotedVar("numnames"),
   Identifier(":="),
   Identifier("format.6.authors"),
   Identifier("cite.num.names.short"),
   Identifier("numnames.old"),
   Identifier(">"),
   FunctionLiteral(Any[Identifier("skip\$")]),
   FunctionLiteral(Any[Identifier("year.label"), Identifier("year.label.old"), Identifier("="), FunctionLiteral(Any[Identifier("numnames"), Integer(3), Identifier("<"), Identifier("numnames.old"), Integer(3), Identifier("<"), Identifier("or"), FunctionLiteral(Any[Identifier("definitive.cite.num.names.1.or.2")]), FunctionLiteral(Any[Identifier("definitive.cite.num.names.3.or.more")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("skip\$")]), Identifier("if\$")]),
   Identifier("if\$"),
   Identifier("cite.num.names.short"),
   Identifier("name.max"),
   Identifier(">"),
   FunctionLiteral(Any[Identifier("name.max"), QuotedVar("cite.num.names.short"), Identifier(":=")]),
   QuotedVar("skip\$"),
   Identifier("if\$"),
   Identifier("cite.num.names.full"),
   Identifier("cite.num.names.short"),
   Identifier("<"),
   FunctionLiteral(Any[Identifier("cite.num.names.short"), QuotedVar("cite.num.names.full"), Identifier(":=")]),
   QuotedVar("skip\$"),
   Identifier("if\$"),
   Identifier("update.cite.num.names")]],
 Any["FUNCTION",
  Any[Identifier("definitive.cite.no.names")],
  Any[QuotedVar("aut1f"),
   Identifier(":="),
   String(""),
   QuotedVar("aut2"),
   Identifier(":="),
   String(""),
   QuotedVar("aut3"),
   Identifier(":="),
   String(""),
   QuotedVar("aut4"),
   Identifier(":="),
   String(""),
   QuotedVar("aut5"),
   Identifier(":="),
   String(""),
   QuotedVar("aut6"),
   Identifier(":="),
   Integer(1),
   QuotedVar("numnames"),
   Identifier(":="),
   Identifier("year.label"),
   Identifier("year.label.old"),
   Identifier("="),
   FunctionLiteral(Any[Identifier("definitive.cite.num.names.1.or.2")]),
   FunctionLiteral(Any[Identifier("skip\$")]),
   Identifier("if\$"),
   Identifier("update.cite.num.names")]],
 Any["FUNCTION",
  Any[Identifier("definitive.cite.num.names")],
  Any[Identifier("firstkey"),
   Identifier("empty\$"),
   Identifier("not"),
   FunctionLiteral(Any[Identifier("firstkey"), Identifier("sortify"), Identifier("remove.spaces"), Identifier("definitive.cite.no.names")]),
   FunctionLiteral(Any[Identifier("key"), Identifier("empty\$"), Identifier("not"), FunctionLiteral(Any[Identifier("key"), Identifier("sortify"), Identifier("remove.spaces"), Identifier("definitive.cite.no.names")]), FunctionLiteral(Any[Identifier("ref.type"), Integer(2), Identifier("="), FunctionLiteral(Any[Identifier("author"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("title.sort.label"), Identifier("definitive.cite.no.names")]), FunctionLiteral(Any[Identifier("author"), Identifier("definitive.cite.num.names.field")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("author"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("editor"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("title.sort.label"), Identifier("definitive.cite.no.names")]), FunctionLiteral(Any[Identifier("editor"), Identifier("definitive.cite.num.names.field")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("author"), Identifier("definitive.cite.num.names.field")]), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("make.tentative.year.sort.label")],
  Any[Identifier("year"),
   Identifier("empty\$"),
   FunctionLiteral(Any[String("0000"), QuotedVar("year.label"), Identifier(":=")]),
   FunctionLiteral(Any[Identifier("year"), String("\\bibnodate"), Identifier("="), Identifier("year"), String("n.d."), Identifier("="), Identifier("or"), FunctionLiteral(Any[String("0000"), QuotedVar("year.label"), Identifier(":=")]), FunctionLiteral(Any[Identifier("year"), String("\\BIP"), Identifier("="), FunctionLiteral(Any[String("9999"), QuotedVar("year.label"), Identifier(":=")]), FunctionLiteral(Any[Identifier("year"), Identifier("sortify"), Identifier("remove.spaces"), QuotedVar("year.label"), Identifier(":=")]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("if\$"),
   Identifier("year.label")]],
 Any["FUNCTION",
  Any[Identifier("month.number.day")],
  Any[Identifier("month"),
   Identifier("empty\$"),
   FunctionLiteral(Any[String("")]),
   FunctionLiteral(Any[Identifier("month"), Identifier("sortify"), Identifier("remove.spaces"), Identifier("day"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[String("/"), Identifier("*"), Identifier("day"), Identifier("sortify"), Identifier("remove.spaces"), Identifier("*")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("make.name.sort.label")],
  Any[QuotedVar("field"),
   Identifier(":="),
   Identifier("field"),
   Identifier("num.names\$"),
   QuotedVar("numnames"),
   Identifier(":="),
   Identifier("field"),
   Integer(1),
   Identifier("sort.name.format"),
   Identifier("format.name\$"),
   Identifier("numnames"),
   Integer(1),
   Identifier("="),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("numnames"), Integer(2), Identifier("="), FunctionLiteral(Any[Identifier("field"), Integer(2), String("{ll{}}"), Identifier("format.name\$"), QuotedVar("s"), Identifier(":="), Identifier("s"), String("others"), Identifier("="), FunctionLiteral(Any[String("   zzzz"), Identifier("*")]), FunctionLiteral(Any[String("   "), Identifier("*"), Identifier("s"), Identifier("*")]), Identifier("if\$")]), FunctionLiteral(Any[String("   zzzz"), Identifier("*")]), Identifier("if\$")]),
   Identifier("if\$"),
   String("    "),
   Identifier("*"),
   Identifier("make.tentative.year.sort.label"),
   Identifier("*"),
   String("    "),
   Identifier("*"),
   Identifier("numnames"),
   Integer(3),
   Identifier("<"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("numnames"), Identifier("name.max"), Identifier(">"), FunctionLiteral(Any[Identifier("name.max"), QuotedVar("lastname"), Identifier(":="), String("   zzzz")]), FunctionLiteral(Any[Identifier("numnames"), QuotedVar("lastname"), Identifier(":="), String("")]), Identifier("if\$"), String(""), Integer(2), QuotedVar("nameptr"), Identifier(":="), FunctionLiteral(Any[Identifier("nameptr"), Identifier("lastname"), Identifier("<")]), FunctionLiteral(Any[Identifier("field"), Identifier("nameptr"), String("{ll{}}"), Identifier("format.name\$"), Identifier("*"), String("   "), Identifier("*"), Identifier("nameptr"), Integer(1), Identifier("+"), QuotedVar("nameptr"), Identifier(":=")]), Identifier("while\$"), Identifier("field"), Identifier("lastname"), String("{ll{}}"), Identifier("format.name\$"), QuotedVar("s"), Identifier(":="), Identifier("s"), String("others"), Identifier("="), FunctionLiteral(Any[String("zzzz"), Identifier("*")]), FunctionLiteral(Any[Identifier("s"), Identifier("*")]), Identifier("if\$"), Identifier("swap\$"), Identifier("*"), Identifier("*")]),
   Identifier("if\$"),
   String("    "),
   Identifier("*"),
   Identifier("title.number"),
   Identifier("conv.int.to.str"),
   Identifier("*"),
   Identifier("sortify"),
   String("    "),
   Identifier("*"),
   Identifier("month.number.day"),
   Identifier("*"),
   QuotedVar("author.year.sort.label"),
   Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("make.field.year.sort.label")],
  Any[String("    "),
   Identifier("*"),
   Identifier("make.tentative.year.sort.label"),
   Identifier("*"),
   String("    "),
   Identifier("*"),
   String("    "),
   Identifier("*"),
   Identifier("title.number"),
   Identifier("conv.int.to.str"),
   Identifier("*"),
   Identifier("sortify"),
   String("    "),
   Identifier("*"),
   Identifier("month.number.day"),
   Identifier("*"),
   QuotedVar("author.year.sort.label"),
   Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("make.author.editor.sort.label")],
  Any[Identifier("author"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("editor"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("title.sort.label"), Identifier("make.field.year.sort.label")]), FunctionLiteral(Any[Identifier("editor"), Identifier("make.name.sort.label")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("author"), Identifier("make.name.sort.label")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("make.author.sort.label")],
  Any[Identifier("author"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("title.sort.label"), Identifier("make.field.year.sort.label")]),
   FunctionLiteral(Any[Identifier("author"), Identifier("make.name.sort.label")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("make.tentative.sort.label")],
  Any[Identifier("firstkey"),
   Identifier("empty\$"),
   Identifier("not"),
   FunctionLiteral(Any[Identifier("key"), Identifier("empty\$"), Identifier("not"), FunctionLiteral(Any[Identifier("key"), Identifier("sortify"), Identifier("remove.spaces"), String("  "), Identifier("*"), Identifier("firstkey"), Identifier("sortify"), Identifier("remove.spaces"), Identifier("*"), Identifier("make.field.year.sort.label")]), FunctionLiteral(Any[Identifier("firstkey"), Identifier("sortify"), Identifier("remove.spaces"), Identifier("make.field.year.sort.label")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("key"), Identifier("empty\$"), Identifier("not"), FunctionLiteral(Any[Identifier("key"), Identifier("sortify"), Identifier("remove.spaces"), Identifier("make.field.year.sort.label")]), FunctionLiteral(Any[Identifier("ref.type"), Identifier("duplicate\$"), Integer(1), Identifier("="), FunctionLiteral(Any[Identifier("pop\$"), Identifier("make.author.editor.sort.label")]), FunctionLiteral(Any[Identifier("duplicate\$"), Integer(2), Identifier("="), FunctionLiteral(Any[Identifier("pop\$"), Identifier("make.author.sort.label")]), FunctionLiteral(Any[Integer(3), Identifier("="), FunctionLiteral(Any[String("no key in "), Identifier("cite\$"), Identifier("*"), Identifier("warning\$"), Identifier("make.author.editor.sort.label")]), FunctionLiteral(Any[Identifier("make.author.editor.sort.label")]), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("if\$"),
   Identifier("author.year.sort.label"),
   QuotedVar("sort.key\$"),
   Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("make.definitive.name.sort.label")],
  Any[QuotedVar("field"),
   Identifier(":="),
   Identifier("field"),
   Identifier("num.names\$"),
   QuotedVar("numnames"),
   Identifier(":="),
   Identifier("numnames"),
   Identifier("name.max"),
   Identifier(">"),
   FunctionLiteral(Any[Identifier("name.max"), QuotedVar("format.num.names"), Identifier(":=")]),
   FunctionLiteral(Any[Identifier("numnames"), QuotedVar("format.num.names"), Identifier(":=")]),
   Identifier("if\$"),
   String(""),
   Integer(1),
   QuotedVar("nameptr"),
   Identifier(":="),
   FunctionLiteral(Any[Identifier("nameptr"), Identifier("format.num.names"), Identifier("<")]),
   FunctionLiteral(Any[Identifier("field"), Identifier("nameptr"), Identifier("sort.name.format"), Identifier("format.name\$"), Identifier("*"), String("   "), Identifier("*"), Identifier("nameptr"), Integer(1), Identifier("+"), QuotedVar("nameptr"), Identifier(":=")]),
   Identifier("while\$"),
   Identifier("field"),
   Identifier("nameptr"),
   Identifier("sort.name.format"),
   Identifier("format.name\$"),
   Identifier("*"),
   Identifier("nameptr"),
   Identifier("numnames"),
   Identifier("<"),
   FunctionLiteral(Any[String("   zzzz"), Identifier("*")]),
   QuotedVar("skip\$"),
   Identifier("if\$"),
   Identifier("sortify"),
   String("    "),
   Identifier("*"),
   Identifier("year.label"),
   Identifier("*"),
   String("    "),
   Identifier("*"),
   Identifier("title.number"),
   Identifier("conv.int.to.str"),
   Identifier("*"),
   String("    "),
   Identifier("*"),
   Identifier("month.number.day"),
   Identifier("*"),
   QuotedVar("author.year.sort.label"),
   Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("make.definitive.field.year.sort.label")],
  Any[String("    "),
   Identifier("*"),
   Identifier("year.label"),
   Identifier("*"),
   String("    "),
   Identifier("*"),
   Identifier("title.number"),
   Identifier("conv.int.to.str"),
   Identifier("*"),
   String("    "),
   Identifier("*"),
   Identifier("month.number.day"),
   Identifier("*"),
   QuotedVar("author.year.sort.label"),
   Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("make.definitive.author.editor.sort.label")],
  Any[Identifier("author"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("editor"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("title.sort.label"), Identifier("make.definitive.field.year.sort.label")]), FunctionLiteral(Any[Identifier("editor"), Identifier("make.definitive.name.sort.label")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("author"), Identifier("make.definitive.name.sort.label")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("make.definitive.author.sort.label")],
  Any[Identifier("author"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("title.sort.label"), Identifier("make.definitive.field.year.sort.label")]),
   FunctionLiteral(Any[Identifier("author"), Identifier("make.definitive.name.sort.label")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("make.final.sort.key")],
  Any[Identifier("ref.type"),
   Integer(2),
   Identifier("="),
   FunctionLiteral(Any[Identifier("make.definitive.author.sort.label")]),
   FunctionLiteral(Any[Identifier("make.definitive.author.editor.sort.label")]),
   Identifier("if\$"),
   Identifier("author.year.sort.label"),
   QuotedVar("sort.key\$"),
   Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("chop.word")],
  Any[QuotedVar("s"),
   Identifier(":="),
   QuotedVar("len"),
   Identifier(":="),
   Identifier("s"),
   Integer(1),
   Identifier("len"),
   Identifier("substring\$"),
   Identifier("="),
   FunctionLiteral(Any[Identifier("s"), Identifier("len"), Integer(1), Identifier("+"), Identifier("global.max\$"), Identifier("substring\$")]),
   FunctionLiteral(Any[Identifier("s")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("chop.articles")],
  Any[QuotedVar("s"),
   Identifier(":="),
   String("a "),
   Integer(2),
   String("an "),
   Integer(3),
   String("the "),
   Integer(4),
   Identifier("s"),
   Identifier("chop.word"),
   Identifier("chop.word"),
   Identifier("chop.word")]],
 Any["FUNCTION",
  Any[Identifier("format.sort.title")],
  Any[Identifier("sortify"),
   Identifier("chop.articles"),
   Integer(1),
   Identifier("entry.max\$"),
   Identifier("substring\$")]],
 Any["FUNCTION",
  Any[Identifier("make.sort.title")],
  Any[Identifier("title"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("text"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("type"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("howpublished"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("note"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("url"), Identifier("empty\$"), FunctionLiteral(Any[String(" ")]), FunctionLiteral(Any[Identifier("url"), Identifier("format.sort.title")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("note"), Identifier("format.sort.title")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("howpublished"), Identifier("format.sort.title")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("type"), Identifier("format.sort.title")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("text"), Identifier("format.sort.title")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("title"), Identifier("format.sort.title")]),
   Identifier("if\$"),
   Identifier("remove.spaces"),
   QuotedVar("title.sort.label"),
   Identifier(":="),
   Identifier("title.sort.label"),
   QuotedVar("sort.key\$"),
   Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("make.title.number")],
  Any[Identifier("title.sort.label"),
   Identifier("old.label"),
   Identifier("="),
   FunctionLiteral(Any[Identifier("old.number"), QuotedVar("title.number"), Identifier(":=")]),
   FunctionLiteral(Any[Identifier("old.number"), Integer(1), Identifier("+"), QuotedVar("title.number"), Identifier(":="), Identifier("title.number"), QuotedVar("old.number"), Identifier(":="), Identifier("title.sort.label"), QuotedVar("old.label"), Identifier(":=")]),
   Identifier("if\$")]],
 Any["FUNCTION", Any[Identifier("last.part.name.format")], Any[String("{ll}")]],
 Any["FUNCTION",
  Any[Identifier("initials.with.space.name.format")],
  Any[String("{f.}")]],
 Any["FUNCTION",
  Any[Identifier("von.last.junior.name.format")],
  Any[String("{vv }{ll}{ jj}")]],
 Any["FUNCTION",
  Any[Identifier("von.junior.name.format")],
  Any[String("{ vv}{, jj}")]],
 Any["FUNCTION",
  Any[Identifier("one.complete.name.format")],
  Any[String("{vv }{ll}{, jj}{, ff}")]],
 Any["FUNCTION",
  Any[Identifier("string.length")],
  Any[Integer(0),
   QuotedVar("pos"),
   Identifier(":="),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("pos"), Integer(1), Identifier("+"), Integer(1), Identifier("substring\$"), String(""), Identifier("="), Identifier("not")]),
   FunctionLiteral(Any[Identifier("pos"), Integer(1), Identifier("+"), QuotedVar("pos"), Identifier(":=")]),
   Identifier("while\$"),
   Identifier("pop\$"),
   Identifier("pos")]],
 Any["FUNCTION",
  Any[Identifier("transform.spaces.and.hyphens")],
  Any[QuotedVar("s"),
   Identifier(":="),
   Identifier("s"),
   Identifier("string.length"),
   QuotedVar("len"),
   Identifier(":="),
   String(""),
   QuotedVar("t"),
   Identifier(":="),
   Integer(1),
   QuotedVar("pos"),
   Identifier(":="),
   Integer(0),
   QuotedVar("brace.level"),
   Identifier(":="),
   FunctionLiteral(Any[Identifier("pos"), Identifier("len"), Identifier("<")]),
   FunctionLiteral(Any[Identifier("brace.level"), Integer(0), Identifier("="), FunctionLiteral(Any[Identifier("s"), Identifier("pos"), Integer(2), Identifier("substring\$"), String(". "), Identifier("="), Identifier("s"), Identifier("pos"), Integer(2), Identifier("substring\$"), String(".~"), Identifier("="), Identifier("or"), FunctionLiteral(Any[Identifier("t"), String("\\BPBI "), Identifier("*"), QuotedVar("t"), Identifier(":="), Identifier("pos"), Integer(2), Identifier("+"), QuotedVar("pos"), Identifier(":=")]), FunctionLiteral(Any[Identifier("s"), Identifier("pos"), Integer(2), Identifier("substring\$"), String(".-"), Identifier("="), FunctionLiteral(Any[Identifier("t"), String("\\BHBI "), Identifier("*"), QuotedVar("t"), Identifier(":="), Identifier("pos"), Integer(2), Identifier("+"), QuotedVar("pos"), Identifier(":=")]), FunctionLiteral(Any[Identifier("t"), Identifier("s"), Identifier("pos"), Integer(1), Identifier("substring\$"), Identifier("*"), QuotedVar("t"), Identifier(":="), Identifier("s"), Identifier("pos"), Integer(1), Identifier("substring\$"), String("{"), Identifier("="), FunctionLiteral(Any[Identifier("brace.level"), Integer(1), Identifier("+"), QuotedVar("brace.level"), Identifier(":=")]), QuotedVar("skip\$"), Identifier("if\$"), Identifier("pos"), Integer(1), Identifier("+"), QuotedVar("pos"), Identifier(":=")]), Identifier("if\$")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("t"), Identifier("s"), Identifier("pos"), Integer(1), Identifier("substring\$"), Identifier("*"), QuotedVar("t"), Identifier(":="), Identifier("s"), Identifier("pos"), Integer(1), Identifier("substring\$"), String("{"), Identifier("="), FunctionLiteral(Any[Identifier("brace.level"), Integer(1), Identifier("+"), QuotedVar("brace.level"), Identifier(":=")]), FunctionLiteral(Any[Identifier("s"), Identifier("pos"), Integer(1), Identifier("substring\$"), String("}"), Identifier("="), FunctionLiteral(Any[Identifier("brace.level"), Integer(1), Identifier("-"), QuotedVar("brace.level"), Identifier(":=")]), QuotedVar("skip\$"), Identifier("if\$")]), Identifier("if\$"), Identifier("pos"), Integer(1), Identifier("+"), QuotedVar("pos"), Identifier(":=")]), Identifier("if\$")]),
   Identifier("while\$"),
   Identifier("pos"),
   Identifier("len"),
   Identifier("="),
   FunctionLiteral(Any[Identifier("t"), Identifier("s"), Identifier("pos"), Integer(1), Identifier("substring\$"), Identifier("*"), QuotedVar("t"), Identifier(":=")]),
   FunctionLiteral(Any[Identifier("s"), Identifier("len"), Integer(1), Identifier("-"), Integer(2), Identifier("substring\$"), Identifier("t"), Identifier("text.length\$"), QuotedVar("len"), Identifier(":="), Identifier("t"), Integer(1), Identifier("len"), Integer(6), Identifier("-"), Identifier("substring\$"), Identifier("swap\$"), Identifier("*"), QuotedVar("t"), Identifier(":=")]),
   Identifier("if\$"),
   Identifier("t")]],
 Any["FUNCTION",
  Any[Identifier("format.initials.with.hyphen")],
  Any[Identifier("initials.with.space.name.format"),
   Identifier("format.name\$"),
   Identifier("transform.spaces.and.hyphens")]],
 Any["FUNCTION",
  Any[Identifier("format.last.part.name")],
  Any[Identifier("last.part.name.format"), Identifier("format.name\$")]],
 Any["FUNCTION",
  Any[Identifier("format.von.last.junior.name")],
  Any[Identifier("von.last.junior.name.format"), Identifier("format.name\$")]],
 Any["FUNCTION",
  Any[Identifier("format.von.junior.name")],
  Any[Identifier("von.junior.name.format"), Identifier("format.name\$")]],
 Any["FUNCTION",
  Any[Identifier("format.cite.initials.name")],
  Any[Identifier("one.complete.name.format"),
   Identifier("format.name\$"),
   Identifier("duplicate\$"),
   Integer(1),
   Identifier("format.initials.with.hyphen"),
   Identifier("swap\$"),
   Integer(1),
   Identifier("format.von.last.junior.name"),
   String("~"),
   Identifier("connect.check")]],
 Any["FUNCTION",
  Any[Identifier("format.author.name")],
  Any[Identifier("one.complete.name.format"),
   Identifier("format.name\$"),
   Identifier("duplicate\$"),
   Identifier("duplicate\$"),
   Integer(1),
   Identifier("format.last.part.name"),
   Identifier("swap\$"),
   Integer(1),
   Identifier("format.initials.with.hyphen"),
   Identifier("connect.with.comma.check"),
   Identifier("swap\$"),
   Integer(1),
   Identifier("format.von.junior.name"),
   String(""),
   Identifier("connect.check")]],
 Any["FUNCTION",
  Any[Identifier("format.editor.name")],
  Any[Identifier("format.cite.initials.name")]],
 Any["FUNCTION",
  Any[Identifier("format.index.name")],
  Any[Identifier("format.author.name")]],
 Any["FUNCTION", Any[Identifier("comma.between.two")], Any[String("\\BCBT{}")]],
 Any["FUNCTION", Any[Identifier("comma.between.names")], Any[String(", ")]],
 Any["FUNCTION", Any[Identifier("comma.before.last")], Any[String("\\BCBL{}")]],
 Any["FUNCTION", Any[Identifier("and.before.last")], Any[String("\\ \\BBA{} ")]],
 Any["FUNCTION",
  Any[Identifier("et.al.string.cite")],
  Any[String("\\ \\protect\\BOthers{.}")]],
 Any["FUNCTION", Any[Identifier("et.al.string")], Any[String("\\ \\BOthers{.}")]],
 Any["FUNCTION",
  Any[Identifier("et.al.string.period")],
  Any[String("\\ \\BOthersPeriod{.}")]],
 Any["FUNCTION",
  Any[Identifier("add.name.index")],
  Any[Identifier("make.index"),
   FunctionLiteral(Any[String("%"), Identifier("*"), Identifier("write\$"), Identifier("newline\$"), Identifier("field"), Identifier("is.bibcorporate"), FunctionLiteral(Any[String("\\corporateAX{")]), FunctionLiteral(Any[String("\\AX{")]), Identifier("if\$"), Identifier("write\$"), Identifier("field"), Identifier("nameptr"), Identifier("sort.name.format"), Identifier("format.name\$"), Identifier("sortify"), Identifier("write\$"), Identifier("newline\$"), String("@"), Identifier("write\$"), Identifier("field"), Identifier("nameptr"), Identifier("format.index.name"), String("}%"), Identifier("*"), Identifier("write\$"), Identifier("newline\$")]),
   FunctionLiteral(Any[String("%"), Identifier("*"), Identifier("write\$"), Identifier("newline\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("make.name.cite.label")],
  Any[QuotedVar("field"),
   Identifier(":="),
   QuotedVar("format.num.names"),
   Identifier(":="),
   Identifier("field"),
   Identifier("num.names\$"),
   QuotedVar("numnames"),
   Identifier(":="),
   Identifier("format.num.names"),
   Identifier("numnames"),
   Integer(1),
   Identifier("-"),
   Identifier("="),
   FunctionLiteral(Any[Identifier("numnames"), QuotedVar("format.num.names"), Identifier(":=")]),
   QuotedVar("skip\$"),
   Identifier("if\$"),
   Integer(1),
   QuotedVar("nameptr"),
   Identifier(":="),
   Identifier("cite.initials"),
   Integer(1),
   Identifier("="),
   FunctionLiteral(Any[Identifier("field"), Identifier("nameptr"), Identifier("format.cite.initials.name")]),
   FunctionLiteral(Any[Identifier("field"), Identifier("nameptr"), Identifier("cite.name.format"), Identifier("format.name\$")]),
   Identifier("if\$"),
   Identifier("add.name.index"),
   Identifier("numnames"),
   Integer(1),
   Identifier("="),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("format.num.names"), Integer(1), Identifier("="), FunctionLiteral(Any[Identifier("et.al.string.cite"), Identifier("write\$")]), FunctionLiteral(Any[Identifier("numnames"), Integer(2), Identifier("="), FunctionLiteral(Any[Integer(2), QuotedVar("nameptr"), Identifier(":="), Identifier("field"), Identifier("nameptr"), Identifier("cite.name.format"), Identifier("format.name\$"), QuotedVar("s"), Identifier(":="), Identifier("s"), String("others"), Identifier("="), FunctionLiteral(Any[Identifier("et.al.string.cite"), Identifier("write\$")]), FunctionLiteral(Any[Identifier("and.before.last"), Identifier("write\$"), Identifier("s"), Identifier("add.name.index")]), Identifier("if\$")]), FunctionLiteral(Any[Integer(2), QuotedVar("nameptr"), Identifier(":="), FunctionLiteral(Any[Identifier("nameptr"), Identifier("format.num.names"), Identifier("<")]), FunctionLiteral(Any[Identifier("comma.between.names"), Identifier("write\$"), Identifier("field"), Identifier("nameptr"), Identifier("cite.name.format"), Identifier("format.name\$"), Identifier("add.name.index"), Identifier("nameptr"), Integer(1), Identifier("+"), QuotedVar("nameptr"), Identifier(":=")]), Identifier("while\$"), Identifier("field"), Identifier("nameptr"), Identifier("cite.name.format"), Identifier("format.name\$"), QuotedVar("s"), Identifier(":="), Identifier("format.num.names"), Identifier("numnames"), Identifier("="), FunctionLiteral(Any[Identifier("comma.before.last"), Identifier("write\$"), Identifier("s"), String("others"), Identifier("="), FunctionLiteral(Any[Identifier("et.al.string.cite"), Identifier("write\$")]), FunctionLiteral(Any[Identifier("and.before.last"), Identifier("write\$"), Identifier("s"), Identifier("add.name.index")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("comma.between.names"), Identifier("write\$"), Identifier("s"), Identifier("add.name.index"), Identifier("comma.before.last"), Identifier("et.al.string.cite"), Identifier("*"), Identifier("write\$")]), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("make.title.cite.label")],
  Any[Identifier("is.atype"),
   FunctionLiteral(Any[String("\\APACciteatitle{")]),
   FunctionLiteral(Any[String("\\APACcitebtitle{")]),
   Identifier("if\$"),
   Identifier("title"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("text"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("type"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("howpublished"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("note"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("url"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("cite\$")]), FunctionLiteral(Any[Identifier("url")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("note")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("howpublished")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("type")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("text")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("title")]),
   Identifier("if\$"),
   Identifier("*"),
   String("}"),
   Identifier("*"),
   Identifier("write\$")]],
 Any["FUNCTION",
  Any[Identifier("make.author.editor.cite.label")],
  Any[Identifier("author"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("editor"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("make.title.cite.label"), String("}{%"), Identifier("write\$"), Identifier("newline\$"), Identifier("make.title.cite.label")]), FunctionLiteral(Any[Identifier("cite.num.names.full"), Identifier("editor"), Identifier("make.name.cite.label"), String("}{%"), Identifier("write\$"), Identifier("newline\$"), Identifier("cite.num.names.short"), Identifier("editor"), Identifier("make.name.cite.label")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("cite.num.names.full"), Identifier("author"), Identifier("make.name.cite.label"), String("}{%"), Identifier("write\$"), Identifier("newline\$"), Identifier("cite.num.names.short"), Identifier("author"), Identifier("make.name.cite.label")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("make.author.cite.label")],
  Any[Identifier("author"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("make.title.cite.label"), String("}{%"), Identifier("write\$"), Identifier("newline\$"), Identifier("make.title.cite.label")]),
   FunctionLiteral(Any[Identifier("cite.num.names.full"), Identifier("author"), Identifier("make.name.cite.label"), String("}{%"), Identifier("write\$"), Identifier("newline\$"), Identifier("cite.num.names.short"), Identifier("author"), Identifier("make.name.cite.label")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("make.definitive.year.supplement")],
  Any[Identifier("add.to.year"),
   Integer(0),
   Identifier("="),
   FunctionLiteral(Any[String("")]),
   FunctionLiteral(Any[String("{\\protect"), Identifier("year"), Identifier("empty\$"), FunctionLiteral(Any[String("\\BCntND"), Identifier("*")]), FunctionLiteral(Any[Identifier("year"), String("\\bibnodate"), Identifier("="), FunctionLiteral(Any[String("\\BCntND"), Identifier("*")]), FunctionLiteral(Any[Identifier("year"), String("\\BIP"), Identifier("="), FunctionLiteral(Any[String("\\BCntIP"), Identifier("*")]), FunctionLiteral(Any[String("\\BCnt"), Identifier("*")]), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$"), String("{"), Identifier("*"), Identifier("add.to.year"), Identifier("int.to.str\$"), Identifier("*"), String("}}"), Identifier("*")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("protect.year")],
  Any[Identifier("year"),
   Identifier("empty\$"),
   FunctionLiteral(Any[String("{\\protect\\bibnodate{}}")]),
   FunctionLiteral(Any[Identifier("year"), String("\\bibnodate"), Identifier("="), FunctionLiteral(Any[String("{\\protect\\bibnodate{}}")]), FunctionLiteral(Any[Identifier("year"), String("\\BIP"), Identifier("="), FunctionLiteral(Any[String("{\\protect\\BIP{}}")]), FunctionLiteral(Any[Identifier("year")]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("make.definitive.year.label")],
  Any[String("{\\protect\\APACyear{"),
   Identifier("originalyear"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("protect.year")]),
   FunctionLiteral(Any[Identifier("originalyear"), String("\\bibnodate"), Identifier("="), FunctionLiteral(Any[Identifier("translator"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("protect.year")]), FunctionLiteral(Any[Identifier("year"), Identifier("empty\$"), FunctionLiteral(Any[String("{\\protect\\BTRANSL{}~\\protect\\bibnodate{}}")]), FunctionLiteral(Any[String("{\\protect\\BTRANSL{}}~"), Identifier("protect.year"), Identifier("*")]), Identifier("if\$")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("year"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("originalyear"), String("/{\\protect\\bibnodate{}}"), Identifier("*")]), FunctionLiteral(Any[Identifier("originalyear"), Identifier("year"), Identifier("="), FunctionLiteral(Any[Identifier("protect.year")]), FunctionLiteral(Any[Identifier("originalyear"), String("/"), Identifier("*"), Identifier("protect.year"), Identifier("*")]), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("if\$"),
   Identifier("*"),
   String("}}%"),
   Identifier("*"),
   Identifier("write\$"),
   Identifier("newline\$"),
   String("{\\protect\\APACexlab{"),
   String("}}"),
   Identifier("make.definitive.year.supplement"),
   Identifier("enclose.check")]],
 Any["FUNCTION",
  Any[Identifier("make.cite.labels")],
  Any[Identifier("newline\$"),
   Identifier("test"),
   FunctionLiteral(Any[String("\\bibitem[]{} \\fullciteA{"), Identifier("cite\$"), Identifier("*"), String("}"), Identifier("*"), Identifier("write\$"), Identifier("newline\$"), String("\\bibitem[]{} \\citeA{"), Identifier("cite\$"), Identifier("*"), String("}"), Identifier("*"), Identifier("write\$"), Identifier("newline\$")]),
   QuotedVar("skip\$"),
   Identifier("if\$"),
   String("\\bibitem[\\protect\\citeauthoryear{%"),
   Identifier("write\$"),
   Identifier("newline\$"),
   Identifier("firstkey"),
   Identifier("empty\$"),
   Identifier("not"),
   FunctionLiteral(Any[Identifier("firstkey"), Identifier("write\$"), String("}{%"), Identifier("write\$"), Identifier("newline\$"), Identifier("cite.initials"), Integer(0), Identifier("="), Identifier("key"), Identifier("empty\$"), Identifier("not"), Identifier("and"), FunctionLiteral(Any[Identifier("key")]), FunctionLiteral(Any[Identifier("firstkey")]), Identifier("if\$"), Identifier("write\$")]),
   FunctionLiteral(Any[Identifier("key"), Identifier("empty\$"), Identifier("not"), FunctionLiteral(Any[Identifier("key"), Identifier("write\$"), String("}{%"), Identifier("write\$"), Identifier("newline\$"), Identifier("key"), Identifier("write\$")]), FunctionLiteral(Any[Identifier("ref.type"), Integer(2), Identifier("="), FunctionLiteral(Any[Identifier("make.author.cite.label")]), FunctionLiteral(Any[Identifier("make.author.editor.cite.label")]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("if\$"),
   String("}{%"),
   Identifier("write\$"),
   Identifier("newline\$"),
   Identifier("make.definitive.year.label"),
   Identifier("write\$"),
   String("}]{%"),
   Identifier("write\$"),
   Identifier("newline\$"),
   Identifier("cite\$"),
   Identifier("write\$"),
   String("}%"),
   Identifier("write\$"),
   Identifier("newline\$"),
   String("\\APACinsertmetastar{%"),
   Identifier("write\$"),
   Identifier("newline\$"),
   Identifier("cite\$"),
   Identifier("write\$"),
   String("}%"),
   Identifier("write\$"),
   Identifier("newline\$")]],
 Any["FUNCTION",
  Any[Identifier("editor.postfix")],
  Any[Identifier("editor"),
   Identifier("num.names\$"),
   Integer(1),
   Identifier(">"),
   FunctionLiteral(Any[String("(\\BEDS)")]),
   FunctionLiteral(Any[String("(\\BED)")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("editor.trans.postfix")],
  Any[Identifier("editor"),
   Identifier("num.names\$"),
   Integer(1),
   Identifier(">"),
   FunctionLiteral(Any[String("(\\BEDS{} \\BAnd{} \\BTRANSS)")]),
   FunctionLiteral(Any[String("(\\BED{} \\BAnd{} \\BTRANS)")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("trans.postfix")],
  Any[Identifier("translator"),
   Identifier("num.names\$"),
   Integer(1),
   Identifier(">"),
   FunctionLiteral(Any[String("(\\BTRANSS)")]),
   FunctionLiteral(Any[String("(\\BTRANS)")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.author.names")],
  Any[QuotedVar("field"),
   Identifier(":="),
   QuotedVar("dot"),
   Identifier(":="),
   Identifier("field"),
   Identifier("num.names\$"),
   QuotedVar("numnames"),
   Identifier(":="),
   Identifier("numnames"),
   QuotedVar("format.num.names"),
   Identifier(":="),
   Identifier("format.num.names"),
   Identifier("name.max"),
   Identifier(">"),
   FunctionLiteral(Any[Identifier("dot"), FunctionLiteral(Any[Identifier("name.max"), QuotedVar("format.num.names"), Identifier(":=")]), FunctionLiteral(Any[Identifier("cite.num.names.full"), QuotedVar("format.num.names"), Identifier(":=")]), Identifier("if\$")]),
   QuotedVar("skip\$"),
   Identifier("if\$"),
   Integer(1),
   QuotedVar("nameptr"),
   Identifier(":="),
   Identifier("field"),
   Identifier("nameptr"),
   Identifier("format.author.name"),
   Identifier("numnames"),
   Integer(1),
   Identifier("="),
   Identifier("dot"),
   Identifier("and"),
   FunctionLiteral(Any[Identifier("add.period\$")]),
   QuotedVar("skip\$"),
   Identifier("if\$"),
   Identifier("add.name.index"),
   Identifier("numnames"),
   Integer(1),
   Identifier("="),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("format.num.names"), Integer(1), Identifier("="), FunctionLiteral(Any[Identifier("comma.between.two"), Identifier("dot"), FunctionLiteral(Any[Identifier("et.al.string.period"), Identifier("*")]), FunctionLiteral(Any[Identifier("et.al.string"), Identifier("*")]), Identifier("if\$"), Identifier("write\$")]), FunctionLiteral(Any[Identifier("numnames"), Integer(2), Identifier("="), FunctionLiteral(Any[Identifier("comma.between.two"), Identifier("write\$"), Integer(2), QuotedVar("nameptr"), Identifier(":="), Identifier("field"), Identifier("nameptr"), Identifier("format.author.name"), QuotedVar("s"), Identifier(":="), Identifier("s"), String("others"), Identifier("="), FunctionLiteral(Any[Identifier("dot"), FunctionLiteral(Any[Identifier("et.al.string.period")]), FunctionLiteral(Any[Identifier("et.al.string")]), Identifier("if\$"), Identifier("write\$")]), FunctionLiteral(Any[Identifier("and.before.last"), Identifier("write\$"), Identifier("dot"), FunctionLiteral(Any[Identifier("s"), Identifier("add.period\$")]), FunctionLiteral(Any[Identifier("s")]), Identifier("if\$"), Identifier("add.name.index")]), Identifier("if\$")]), FunctionLiteral(Any[Integer(2), QuotedVar("nameptr"), Identifier(":="), FunctionLiteral(Any[Identifier("nameptr"), Identifier("format.num.names"), Identifier("<")]), FunctionLiteral(Any[Identifier("comma.between.names"), Identifier("write\$"), Identifier("field"), Identifier("nameptr"), Identifier("format.author.name"), Identifier("add.name.index"), Identifier("nameptr"), Integer(1), Identifier("+"), QuotedVar("nameptr"), Identifier(":=")]), Identifier("while\$"), Identifier("field"), Identifier("nameptr"), Identifier("format.author.name"), QuotedVar("s"), Identifier(":="), Identifier("format.num.names"), Identifier("numnames"), Identifier("="), FunctionLiteral(Any[Identifier("comma.before.last"), Identifier("write\$"), Identifier("s"), String("others"), Identifier("="), FunctionLiteral(Any[Identifier("dot"), FunctionLiteral(Any[Identifier("et.al.string.period")]), FunctionLiteral(Any[Identifier("et.al.string")]), Identifier("if\$"), Identifier("write\$")]), FunctionLiteral(Any[Identifier("and.before.last"), Identifier("write\$"), Identifier("dot"), FunctionLiteral(Any[Identifier("s"), Identifier("add.period\$")]), FunctionLiteral(Any[Identifier("s")]), Identifier("if\$"), Identifier("add.name.index")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("comma.between.names"), Identifier("write\$"), Identifier("s"), Identifier("add.name.index"), Identifier("comma.before.last"), Identifier("dot"), FunctionLiteral(Any[Identifier("et.al.string.period"), Identifier("*")]), FunctionLiteral(Any[Identifier("et.al.string"), Identifier("*")]), Identifier("if\$"), Identifier("write\$")]), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.authors")],
  Any[Integer(1),
   Identifier("author"),
   Identifier("format.author.names"),
   String("%"),
   Identifier("write\$")]],
 Any["FUNCTION",
  Any[Identifier("format.editors.as.authors")],
  Any[Integer(0),
   Identifier("editor"),
   Identifier("format.author.names"),
   String("\\ "),
   Identifier("editor.postfix"),
   Identifier("*"),
   Identifier("add.period\$"),
   Identifier("write\$")]],
 Any["FUNCTION",
  Any[Identifier("format.ed.trans.as.authors")],
  Any[Integer(0),
   Identifier("editor"),
   Identifier("format.author.names"),
   String("\\ "),
   Identifier("editor.trans.postfix"),
   Identifier("*"),
   Identifier("add.period\$"),
   Identifier("write\$")]],
 Any["FUNCTION",
  Any[Identifier("format.editor.names")],
  Any[QuotedVar("field"),
   Identifier(":="),
   Identifier("field"),
   Identifier("num.names\$"),
   QuotedVar("numnames"),
   Identifier(":="),
   Identifier("numnames"),
   QuotedVar("format.num.names"),
   Identifier(":="),
   Identifier("format.num.names"),
   Identifier("name.max"),
   Identifier(">"),
   FunctionLiteral(Any[Integer(1), QuotedVar("format.num.names"), Identifier(":=")]),
   QuotedVar("skip\$"),
   Identifier("if\$"),
   Identifier("field"),
   Integer(1),
   Identifier("format.editor.name"),
   Identifier("numnames"),
   Integer(1),
   Identifier("="),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("format.num.names"), Integer(1), Identifier("="), FunctionLiteral(Any[Identifier("et.al.string"), Identifier("*")]), FunctionLiteral(Any[Identifier("numnames"), Integer(2), Identifier("="), FunctionLiteral(Any[Identifier("field"), Integer(2), Identifier("format.editor.name"), QuotedVar("s"), Identifier(":="), Identifier("s"), String("others"), Identifier("="), FunctionLiteral(Any[Identifier("et.al.string"), Identifier("*")]), FunctionLiteral(Any[Identifier("and.before.last"), Identifier("*"), Identifier("s"), Identifier("*")]), Identifier("if\$")]), FunctionLiteral(Any[Integer(2), QuotedVar("nameptr"), Identifier(":="), FunctionLiteral(Any[Identifier("nameptr"), Identifier("format.num.names"), Identifier("<")]), FunctionLiteral(Any[Identifier("comma.between.names"), Identifier("*"), Identifier("field"), Identifier("nameptr"), Identifier("format.editor.name"), Identifier("*"), Identifier("nameptr"), Integer(1), Identifier("+"), QuotedVar("nameptr"), Identifier(":=")]), Identifier("while\$"), Identifier("field"), Identifier("nameptr"), Identifier("format.editor.name"), QuotedVar("s"), Identifier(":="), Identifier("format.num.names"), Identifier("numnames"), Identifier("="), FunctionLiteral(Any[Identifier("comma.before.last"), Identifier("*"), Identifier("s"), String("others"), Identifier("="), FunctionLiteral(Any[Identifier("et.al.string"), Identifier("*")]), FunctionLiteral(Any[Identifier("and.before.last"), Identifier("*"), Identifier("s"), Identifier("*")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("comma.between.names"), Identifier("*"), Identifier("s"), Identifier("*"), Identifier("comma.before.last"), Identifier("*"), Identifier("et.al.string"), Identifier("*")]), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.editors.in.line")],
  Any[Identifier("editor"),
   Identifier("format.editor.names"),
   Identifier("editor.postfix"),
   Identifier("connect.with.space.check")]],
 Any["FUNCTION",
  Any[Identifier("format.editors.trans.in.line")],
  Any[Identifier("editor"),
   Identifier("format.editor.names"),
   Identifier("editor.trans.postfix"),
   Identifier("connect.with.space.check")]],
 Any["FUNCTION",
  Any[Identifier("format.translators.in.line")],
  Any[Identifier("translator"),
   Identifier("format.editor.names"),
   Identifier("trans.postfix"),
   Identifier("connect.with.space.check")]],
 Any["FUNCTION",
  Any[Identifier("format.translators.in.paren.check")],
  Any[Identifier("translator"),
   Identifier("empty\$"),
   FunctionLiteral(Any[String("")]),
   FunctionLiteral(Any[Identifier("translator"), Identifier("format.editor.names"), Identifier("translator"), Identifier("num.names\$"), Integer(1), Identifier(">"), FunctionLiteral(Any[String(", \\BTRANSS{}"), Identifier("*")]), FunctionLiteral(Any[String(", \\BTRANS{}"), Identifier("*")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.editors.translators.in.paren.check")],
  Any[Identifier("editor"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("translator"), Identifier("empty\$"), FunctionLiteral(Any[String("")]), FunctionLiteral(Any[Identifier("translator"), Identifier("format.editor.names"), Identifier("translator"), Identifier("num.names\$"), Integer(1), Identifier(">"), FunctionLiteral(Any[String(", \\BTRANSS{}"), Identifier("*")]), FunctionLiteral(Any[String(", \\BTRANS{}"), Identifier("*")]), Identifier("if\$")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("editor"), Identifier("format.editor.names"), Identifier("editor"), Identifier("num.names\$"), Integer(1), Identifier(">"), FunctionLiteral(Any[String(", \\BEDS{}"), Identifier("*")]), FunctionLiteral(Any[String(", \\BED{}"), Identifier("*")]), Identifier("if\$"), Identifier("translator"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("editor"), Identifier("translator"), Identifier("="), FunctionLiteral(Any[Identifier("editor"), Identifier("num.names\$"), Integer(1), Identifier(">"), FunctionLiteral(Any[String(" \\BAnd{} \\BTRANSS"), Identifier("*")]), FunctionLiteral(Any[String(" \\BAnd{} \\BTRANS"), Identifier("*")]), Identifier("if\$")]), FunctionLiteral(Any[String(" \\BAnd{} "), Identifier("*"), Identifier("translator"), Identifier("format.editor.names"), Identifier("*"), Identifier("translator"), Identifier("num.names\$"), Integer(1), Identifier(">"), FunctionLiteral(Any[String(", \\BTRANSS{}"), Identifier("*")]), FunctionLiteral(Any[String(", \\BTRANS{}"), Identifier("*")]), Identifier("if\$")]), Identifier("if\$")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.atrans.check")],
  Any[Identifier("format.translators.in.paren.check"),
   Identifier("parenthesize.check")]],
 Any["FUNCTION",
  Any[Identifier("format.in.editors")],
  Any[String("\\BIn{} "),
   Identifier("editor"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("format.editors.in.line"), Identifier("*"), String(", "), Identifier("*")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.in.trans")],
  Any[String("\\BIn{} "),
   Identifier("translator"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("format.translators.in.line"), Identifier("*"), String(", "), Identifier("*")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.in.editors.trans")],
  Any[String("\\BIn{} "),
   Identifier("editor"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("translator"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("format.translators.in.line"), Identifier("*"), String(", "), Identifier("*")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("translator"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("format.editors.in.line"), Identifier("*")]), FunctionLiteral(Any[Identifier("editor"), Identifier("translator"), Identifier("="), FunctionLiteral(Any[Identifier("format.editors.trans.in.line"), Identifier("*")]), FunctionLiteral(Any[Identifier("format.editors.in.line"), Identifier("*")]), Identifier("if\$")]), Identifier("if\$"), String(", "), Identifier("*")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.year.check")],
  Any[String("\\APACrefYear{"),
   Identifier("year"),
   Identifier("empty\$"),
   FunctionLiteral(Any[String("\\bibnodate{}"), Identifier("*")]),
   FunctionLiteral(Any[Identifier("year"), Identifier("*")]),
   Identifier("if\$"),
   Identifier("make.definitive.year.supplement"),
   Identifier("*"),
   String("}"),
   Identifier("*")]],
 Any["FUNCTION",
  Any[Identifier("format.year.month.day.check")],
  Any[String("\\APACrefYearMonthDay{"),
   Identifier("year"),
   Identifier("empty\$"),
   FunctionLiteral(Any[String("\\bibnodate{}"), Identifier("*")]),
   FunctionLiteral(Any[Identifier("year"), Identifier("*")]),
   Identifier("if\$"),
   Identifier("make.definitive.year.supplement"),
   Identifier("*"),
   String("}{"),
   Identifier("*"),
   Identifier("month"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("month"), Identifier("*")]),
   Identifier("if\$"),
   String("}{"),
   Identifier("*"),
   Identifier("day"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("day"), Identifier("*")]),
   Identifier("if\$"),
   String("}"),
   Identifier("*")]],
 Any["FUNCTION",
  Any[Identifier("format.atitle.no.dot")],
  Any[String("\\BBOQ{}"),
   Identifier("swap\$"),
   String("\\BBCQ{}"),
   Identifier("swap\$"),
   Identifier("duplicate\$"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), String("\\APACrefatitle{"), Identifier("swap\$"), Identifier("*"), String("}{"), Identifier("*"), Identifier("swap\$"), String("t"), Identifier("change.case\$"), Identifier("*"), String("}"), Identifier("*")]),
   Identifier("if\$"),
   Identifier("enclose.check")]],
 Any["FUNCTION",
  Any[Identifier("format.atitle.dot")],
  Any[String("\\BBOQ{}"),
   Identifier("swap\$"),
   String("\\BBCQ{}"),
   Identifier("swap\$"),
   Identifier("duplicate\$"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), String("\\APACrefatitle{"), Identifier("swap\$"), Identifier("*"), String("}{"), Identifier("*"), Identifier("swap\$"), String("t"), Identifier("change.case\$"), Identifier("*"), String("}"), Identifier("*"), Identifier("add.period\$")]),
   Identifier("if\$"),
   Identifier("enclose.check")]],
 Any["FUNCTION",
  Any[Identifier("format.atitle.connect")],
  Any[Identifier("swap\$"),
   Identifier("duplicate\$"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("pop\$"), Identifier("format.atitle.dot")]),
   FunctionLiteral(Any[Identifier("swap\$"), Identifier("format.atitle.no.dot"), Identifier("swap\$"), Identifier("connect.with.space.check"), Identifier("add.period\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.btitle.no.dot")],
  Any[Identifier("duplicate\$"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), String("\\APACrefbtitle{"), Identifier("swap\$"), Identifier("*"), String("}{"), Identifier("*"), Identifier("swap\$"), String("t"), Identifier("change.case\$"), Identifier("*"), String("}"), Identifier("*")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.btitle.dot")],
  Any[Identifier("duplicate\$"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("add.period\$"), Identifier("format.btitle.no.dot")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.btitle.connect")],
  Any[Identifier("swap\$"),
   Identifier("duplicate\$"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("pop\$"), Identifier("format.btitle.dot")]),
   FunctionLiteral(Any[Identifier("swap\$"), Identifier("format.btitle.no.dot"), Identifier("swap\$"), Identifier("connect.with.space.check"), Identifier("add.period\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.btitle.connect.no.dot")],
  Any[Identifier("swap\$"),
   Identifier("duplicate\$"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("pop\$"), Identifier("format.btitle.no.dot")]),
   FunctionLiteral(Any[Identifier("swap\$"), Identifier("format.btitle.no.dot"), Identifier("swap\$"), Identifier("connect.with.space.check")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.aetitle.check")],
  Any[Identifier("englishtitle"),
   Identifier("empty\$"),
   FunctionLiteral(Any[String("")]),
   FunctionLiteral(Any[String("\\APACrefaetitle{"), Identifier("englishtitle"), Identifier("*"), String("}{"), Identifier("*"), Identifier("englishtitle"), String("t"), Identifier("change.case\$"), Identifier("*"), String("}"), Identifier("*")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.betitle.check")],
  Any[Identifier("englishtitle"),
   Identifier("empty\$"),
   FunctionLiteral(Any[String("")]),
   FunctionLiteral(Any[String("\\APACrefbetitle{"), Identifier("englishtitle"), Identifier("*"), String("}{"), Identifier("*"), Identifier("englishtitle"), String("t"), Identifier("change.case\$"), Identifier("*"), String("}"), Identifier("*")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.atype.check")],
  Any[Identifier("type"), Identifier("bracket.check")]],
 Any["FUNCTION",
  Any[Identifier("format.atitle.check")],
  Any[Identifier("format.aetitle.check"),
   Identifier("title"),
   Identifier("format.atitle.connect")]],
 Any["FUNCTION",
  Any[Identifier("format.atitle.type.check")],
  Any[Identifier("format.aetitle.check"),
   Identifier("format.atype.check"),
   Identifier("connect.with.space.check"),
   Identifier("title"),
   Identifier("format.atitle.connect")]],
 Any["FUNCTION",
  Any[Identifier("format.atitle.trans.check")],
  Any[Identifier("format.aetitle.check"),
   Identifier("format.atrans.check"),
   Identifier("connect.with.space.check"),
   Identifier("title"),
   Identifier("format.atitle.connect")]],
 Any["FUNCTION",
  Any[Identifier("format.atitle.type.trans.check")],
  Any[Identifier("format.aetitle.check"),
   Identifier("format.atype.check"),
   Identifier("connect.with.space.check"),
   Identifier("format.atrans.check"),
   Identifier("connect.with.space.check"),
   Identifier("title"),
   Identifier("format.atitle.connect")]],
 Any["FUNCTION",
  Any[Identifier("format.journal.vol.num.pages.check")],
  Any[String("journal"),
   Identifier("journal"),
   Identifier("warning.if.empty"),
   Identifier("duplicate\$"),
   Identifier("empty\$"),
   Identifier("journal"),
   Identifier("empty\$"),
   Identifier("and"),
   Identifier("volume"),
   Identifier("empty\$"),
   Identifier("and"),
   Identifier("number"),
   Identifier("empty\$"),
   Identifier("and"),
   FunctionLiteral(Any[Identifier("pop\$"), String("")]),
   FunctionLiteral(Any[String("\\APACjournalVolNumPages{"), Identifier("journal"), String(""), Identifier("connect.check"), String("}{"), Identifier("*"), Identifier("volume"), String(""), Identifier("connect.check"), String("}{"), Identifier("*"), Identifier("number"), String(""), Identifier("connect.check"), String("}{"), Identifier("*"), Identifier("swap\$"), String(""), Identifier("connect.check"), String("}"), Identifier("*")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.bvolume.check")],
  Any[Identifier("duplicate\$"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("multi.result.check"), FunctionLiteral(Any[String("\\BVOLS"), Identifier("swap\$"), Identifier("tie.or.space.connect")]), FunctionLiteral(Any[String("\\BVOL"), Identifier("swap\$"), Identifier("tie.or.space.connect")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.edition.check")],
  Any[Identifier("duplicate\$"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[String("\\PrintOrdinal{"), Identifier("swap\$"), Identifier("*"), String("}"), Identifier("*"), String("\\BEd"), Identifier("connect.with.space.check")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.bvol.edition.check")],
  Any[Identifier("edition"),
   Identifier("format.edition.check"),
   Identifier("volume"),
   Identifier("format.bvolume.check"),
   Identifier("connect.with.comma.check")]],
 Any["FUNCTION",
  Any[Identifier("format.bvol.edition")],
  Any[Identifier("format.bvol.edition.check"),
   Identifier("parenthesize.check")]],
 Any["FUNCTION",
  Any[Identifier("format.bvol.edition.trans")],
  Any[Identifier("format.bvol.edition.check"),
   Identifier("format.translators.in.paren.check"),
   Identifier("connect.with.semicolon.check"),
   Identifier("parenthesize.check")]],
 Any["FUNCTION",
  Any[Identifier("format.bvol.edition.editor.trans")],
  Any[Identifier("format.bvol.edition.check"),
   Identifier("format.editors.translators.in.paren.check"),
   Identifier("connect.with.semicolon.check"),
   Identifier("parenthesize.check")]],
 Any["FUNCTION",
  Any[Identifier("format.bpages.check")],
  Any[Identifier("duplicate\$"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("multi.result.check"), FunctionLiteral(Any[String("\\BPGS"), Identifier("swap\$"), Identifier("tie.or.space.connect")]), FunctionLiteral(Any[String("\\BPG~"), Identifier("swap\$"), Identifier("*")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.bchapter.check")],
  Any[Identifier("duplicate\$"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("multi.result.check"), FunctionLiteral(Any[String("\\BCHAPS"), Identifier("swap\$"), Identifier("tie.or.space.connect")]), FunctionLiteral(Any[String("\\BCHAP"), Identifier("swap\$"), Identifier("tie.or.space.connect")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.bvol.edition.pages")],
  Any[Identifier("format.bvol.edition.check"),
   Identifier("pages"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("chapter"), Identifier("format.bchapter.check"), Identifier("connect.with.comma.check")]),
   FunctionLiteral(Any[Identifier("pages"), Identifier("format.bpages.check"), Identifier("connect.with.comma.check")]),
   Identifier("if\$"),
   Identifier("parenthesize.check")]],
 Any["FUNCTION",
  Any[Identifier("format.btitle.vol.edition")],
  Any[Identifier("format.betitle.check"),
   Identifier("format.bvol.edition"),
   Identifier("connect.with.space.check"),
   Identifier("title"),
   Identifier("format.btitle.connect.no.dot")]],
 Any["FUNCTION",
  Any[Identifier("format.btitle.vol.edition.trans")],
  Any[Identifier("format.betitle.check"),
   Identifier("format.bvol.edition.trans"),
   Identifier("connect.with.space.check"),
   Identifier("title"),
   Identifier("format.btitle.connect.no.dot")]],
 Any["FUNCTION",
  Any[Identifier("format.btitle.vol.edition.editor.trans")],
  Any[Identifier("format.betitle.check"),
   Identifier("format.bvol.edition.editor.trans"),
   Identifier("connect.with.space.check"),
   Identifier("title"),
   Identifier("format.btitle.connect.no.dot")]],
 Any["FUNCTION",
  Any[Identifier("format.address.publisher")],
  Any[Identifier("author"),
   Identifier("empty\$"),
   Identifier("publisher"),
   Identifier("empty\$"),
   Identifier("or"),
   FunctionLiteral(Any[Identifier("publisher"), String("\\APACaddressPublisher{")]),
   FunctionLiteral(Any[Identifier("author"), Identifier("publisher"), Identifier("="), String("author"), Identifier("publisher"), Identifier("="), Identifier("or"), String("Author"), Identifier("publisher"), Identifier("="), Identifier("or"), FunctionLiteral(Any[Identifier("author"), String("\\APACaddressPublisherEqAuth{")]), FunctionLiteral(Any[Identifier("publisher"), String("\\APACaddressPublisher{")]), Identifier("if\$")]),
   Identifier("if\$"),
   Identifier("address"),
   String(""),
   Identifier("connect.check"),
   String("}{"),
   Identifier("*"),
   Identifier("swap\$"),
   String(""),
   Identifier("connect.check"),
   String("}"),
   Identifier("*")]],
 Any["FUNCTION",
  Any[Identifier("format.address.publisher.check")],
  Any[String("publisher"),
   Identifier("publisher"),
   Identifier("warning.if.empty"),
   String("address"),
   Identifier("address"),
   Identifier("warning.if.empty"),
   Identifier("publisher"),
   Identifier("empty\$"),
   Identifier("address"),
   Identifier("empty\$"),
   Identifier("and"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("format.address.publisher")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.rnumber.check")],
  Any[Identifier("duplicate\$"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("multi.result.check"), FunctionLiteral(Any[String("\\BNUMS"), Identifier("swap\$"), Identifier("tie.or.space.connect")]), FunctionLiteral(Any[String("\\BNUM"), Identifier("swap\$"), Identifier("tie.or.space.connect")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.type.number")],
  Any[Identifier("type"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("type.2")]),
   FunctionLiteral(Any[Identifier("type")]),
   Identifier("if\$"),
   Identifier("number"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("bracket.check")]),
   FunctionLiteral(Any[Identifier("number"), Identifier("format.rnumber.check"), Identifier("connect.with.space.check"), Identifier("parenthesize.check")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.howpublished")],
  Any[Identifier("howpublished"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("pop\$"), FunctionLiteral(Any[Identifier("output.dot.new.block")]), Identifier("if\$"), String("\\APAChowpublished{"), Identifier("howpublished"), Identifier("*"), String("}"), Identifier("*")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("output.howpublished")],
  Any[Identifier("howpublished"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[String("\\APAChowpublished{"), Identifier("howpublished"), Identifier("*"), String("}"), Identifier("*"), Identifier("output.dot.new.block")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("begin.end.url.env")],
  Any[String(" \\begin{APACrefURL} "),
   Identifier("lastchecked"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[String("[{"), Identifier("*"), Identifier("lastchecked"), Identifier("*"), String("}]"), Identifier("*")]),
   Identifier("if\$"),
   String(" \\end{APACrefURL} ")]],
 Any["FUNCTION",
  Any[Identifier("begin.end.msg.env")],
  Any[String(" \\begin{APACrefURLmsg} "), String(" \\end{APACrefURLmsg} ")]],
 Any["FUNCTION",
  Any[Identifier("format.url")],
  Any[Identifier("type.2"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("begin.end.url.env")]),
   FunctionLiteral(Any[Identifier("type.2"), String("\\bibmessage"), Identifier("="), FunctionLiteral(Any[Identifier("begin.end.msg.env")]), FunctionLiteral(Any[Identifier("begin.end.url.env")]), Identifier("if\$")]),
   Identifier("if\$"),
   String("\\url{"),
   Identifier("url"),
   Identifier("*"),
   String("}"),
   Identifier("*"),
   Identifier("enclose.check")]],
 Any["FUNCTION",
  Any[Identifier("format.note")],
  Any[String("\\APACrefnote{"),
   String("}"),
   Identifier("note"),
   Identifier("enclose.check")]],
 Any["FUNCTION",
  Any[Identifier("format.orig.year.note")],
  Any[Identifier("originalyear"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("format.note")]),
   FunctionLiteral(Any[String("\\APACorigyearnote{"), Identifier("originalyear"), String(""), Identifier("connect.check"), String("}{"), Identifier("*"), Identifier("note"), String(""), Identifier("connect.check"), String("}"), Identifier("*")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.orig.journal.note")],
  Any[String("\\APACorigjournalnote{"),
   Identifier("originalyear"),
   String(""),
   Identifier("connect.check"),
   String("}{"),
   Identifier("*"),
   Identifier("originaljournal"),
   String(""),
   Identifier("connect.check"),
   String("}{"),
   Identifier("*"),
   Identifier("originalvolume"),
   String(""),
   Identifier("connect.check"),
   String("}{"),
   Identifier("*"),
   Identifier("originalnumber"),
   String(""),
   Identifier("connect.check"),
   String("}{"),
   Identifier("*"),
   Identifier("originalpages"),
   String(""),
   Identifier("connect.check"),
   String("}{"),
   Identifier("*"),
   Identifier("note"),
   String(""),
   Identifier("connect.check"),
   String("}"),
   Identifier("*")]],
 Any["FUNCTION",
  Any[Identifier("format.orig.book.note")],
  Any[String("\\APACorigbooknote{"),
   Identifier("originalyear"),
   String(""),
   Identifier("connect.check"),
   String("}{"),
   Identifier("*"),
   Identifier("originaleditor"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("originaleditor"), Identifier("num.names\$"), Integer(1), Identifier(">"), FunctionLiteral(Any[String("\\APACorigEDS{"), Identifier("*"), Identifier("originaleditor"), Identifier("format.editor.names"), Identifier("*"), String("}"), Identifier("*")]), FunctionLiteral(Any[String("\\APACorigED{"), Identifier("*"), Identifier("originaleditor"), Identifier("format.editor.names"), Identifier("*"), String("}"), Identifier("*")]), Identifier("if\$")]),
   Identifier("if\$"),
   String("}{"),
   Identifier("*"),
   Identifier("originalbooktitle"),
   Identifier("format.btitle.no.dot"),
   String(""),
   Identifier("connect.check"),
   String("}{"),
   Identifier("*"),
   Identifier("originaledition"),
   Identifier("format.edition.check"),
   String(""),
   Identifier("connect.check"),
   String("}{"),
   Identifier("*"),
   Identifier("originalvolume"),
   Identifier("format.bvolume.check"),
   String(""),
   Identifier("connect.check"),
   String("}{"),
   Identifier("*"),
   Identifier("originalpages"),
   Identifier("format.bpages.check"),
   String(""),
   Identifier("connect.check"),
   String("}{"),
   Identifier("*"),
   Identifier("originaladdress"),
   String(""),
   Identifier("connect.check"),
   String("}{"),
   Identifier("*"),
   Identifier("originalpublisher"),
   String(""),
   Identifier("connect.check"),
   String("}{"),
   Identifier("*"),
   Identifier("note"),
   String(""),
   Identifier("connect.check"),
   String("}"),
   Identifier("*")]],
 Any["FUNCTION",
  Any[Identifier("format.orig.note")],
  Any[Identifier("originaljournal"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("originalbooktitle"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("note"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("originalyear"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("originalyear"), String("\\bibnodate"), Identifier("="), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block"), Identifier("format.orig.year.note")]), Identifier("if\$")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("output.new.block"), Identifier("format.orig.year.note")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("output.new.block"), Identifier("format.orig.book.note")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("output.new.block"), Identifier("format.orig.journal.note")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("periodical")],
  Any[Identifier("author"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("editor"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("format.atitle.type.trans.check"), Identifier("output.new.block"), Identifier("output.dot.new.block")]), FunctionLiteral(Any[Identifier("format.editors.as.authors"), Identifier("start.new.block"), Identifier("output.dot.new.block"), Identifier("format.atitle.type.trans.check"), Identifier("output.new.block")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("format.authors"), Identifier("start.new.block"), Identifier("output.dot.new.block"), Identifier("format.atitle.type.trans.check"), Identifier("output.new.block")]),
   Identifier("if\$"),
   Identifier("format.journal.vol.num.pages.check"),
   Identifier("format.howpublished"),
   Identifier("add.period\$"),
   Identifier("url"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("format.url")]),
   Identifier("if\$"),
   Identifier("format.orig.note"),
   Identifier("fin.entry")]],
 Any["FUNCTION",
  Any[Identifier("article")],
  Any[Identifier("pages"),
   Identifier("format.year.month.day.check"),
   Identifier("periodical")]],
 Any["FUNCTION",
  Any[Identifier("magazine")],
  Any[Identifier("pages"),
   Identifier("format.year.month.day.check"),
   Identifier("periodical")]],
 Any["FUNCTION",
  Any[Identifier("newspaper")],
  Any[Identifier("pages"),
   Identifier("format.bpages.check"),
   Identifier("format.year.month.day.check"),
   Identifier("periodical")]],
 Any["FUNCTION",
  Any[Identifier("book")],
  Any[Identifier("author"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("editor"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("format.btitle.vol.edition.trans"), Identifier("format.type.number"), Identifier("connect.with.space.check"), Identifier("output.dot.new.block"), Identifier("format.year.check"), Identifier("add.period\$")]), FunctionLiteral(Any[Identifier("translator"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("format.editors.as.authors"), Identifier("start.new.block"), Identifier("format.year.check"), Identifier("output.dot.new.block"), Identifier("format.btitle.vol.edition")]), FunctionLiteral(Any[Identifier("translator"), Identifier("editor"), Identifier("="), Identifier("not"), FunctionLiteral(Any[Identifier("format.editors.as.authors"), Identifier("start.new.block"), Identifier("format.year.check"), Identifier("output.dot.new.block"), Identifier("format.btitle.vol.edition.trans")]), FunctionLiteral(Any[Identifier("format.ed.trans.as.authors"), Identifier("start.new.block"), Identifier("format.year.check"), Identifier("output.dot.new.block"), Identifier("format.btitle.vol.edition")]), Identifier("if\$")]), Identifier("if\$"), Identifier("format.type.number"), Identifier("connect.with.space.check"), Identifier("add.period\$")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("format.authors"), Identifier("start.new.block"), Identifier("format.year.check"), Identifier("output.dot.new.block"), Identifier("format.btitle.vol.edition.editor.trans"), Identifier("format.type.number"), Identifier("connect.with.space.check"), Identifier("add.period\$")]),
   Identifier("if\$"),
   Identifier("format.address.publisher.check"),
   Identifier("format.howpublished"),
   Identifier("add.period\$"),
   Identifier("url"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("format.url")]),
   Identifier("if\$"),
   Identifier("format.orig.note"),
   Identifier("fin.entry")]],
 Any["FUNCTION",
  Any[Identifier("incollection")],
  Any[Identifier("author"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("editor.ne.trans"), FunctionLiteral(Any[Identifier("format.atitle.type.trans.check")]), FunctionLiteral(Any[Identifier("format.atitle.type.check")]), Identifier("if\$"), Identifier("output.new.block"), Identifier("format.year.month.day.check"), Identifier("add.period\$")]),
   FunctionLiteral(Any[Identifier("format.authors"), Identifier("start.new.block"), Identifier("format.year.month.day.check"), Identifier("output.dot.new.block"), Identifier("editor.ne.trans"), FunctionLiteral(Any[Identifier("format.atitle.type.trans.check")]), FunctionLiteral(Any[Identifier("format.atitle.type.check")]), Identifier("if\$")]),
   Identifier("if\$"),
   Identifier("output.new.block"),
   Identifier("format.in.editors.trans"),
   Identifier("format.bvol.edition.pages"),
   Identifier("booktitle"),
   Identifier("format.btitle.connect"),
   Identifier("*"),
   Identifier("add.period\$"),
   Identifier("format.address.publisher.check"),
   Identifier("format.howpublished"),
   Identifier("add.period\$"),
   Identifier("url"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("format.url")]),
   Identifier("if\$"),
   Identifier("format.orig.note"),
   Identifier("fin.entry")]],
 Any["FUNCTION",
  Any[Identifier("format.tr.number")],
  Any[Identifier("type"),
   Identifier("empty\$"),
   FunctionLiteral(Any[String("\\BTR{}")]),
   FunctionLiteral(Any[Identifier("type"), String("\\bibnotype"), Identifier("="), FunctionLiteral(Any[String("")]), FunctionLiteral(Any[Identifier("type")]), Identifier("if\$")]),
   Identifier("if\$"),
   Identifier("number"),
   Identifier("format.rnumber.check"),
   Identifier("connect.with.space.check")]],
 Any["FUNCTION",
  Any[Identifier("format.tr.title.number")],
  Any[Identifier("format.betitle.check"),
   Identifier("type"),
   Identifier("empty\$"),
   FunctionLiteral(Any[String("\\APACbVolEdTR{"), Identifier("format.bvol.edition.check"), Identifier("*"), String("}{"), Identifier("*"), Identifier("format.tr.number"), Identifier("*"), String("}"), Identifier("*")]),
   FunctionLiteral(Any[Identifier("type"), String("\\bibnotype"), Identifier("="), Identifier("number"), Identifier("empty\$"), Identifier("volume"), Identifier("empty\$"), Identifier("edition"), Identifier("empty\$"), Identifier("and"), Identifier("and"), Identifier("and"), FunctionLiteral(Any[String("")]), FunctionLiteral(Any[String("\\APACbVolEdTR{"), Identifier("format.bvol.edition.check"), Identifier("*"), String("}{"), Identifier("*"), Identifier("format.tr.number"), Identifier("*"), String("}"), Identifier("*")]), Identifier("if\$")]),
   Identifier("if\$"),
   Identifier("connect.with.space.check"),
   Identifier("title"),
   Identifier("format.btitle.connect")]],
 Any["FUNCTION",
  Any[Identifier("format.address.institution.check")],
  Any[String("institution"),
   Identifier("institution"),
   Identifier("warning.if.empty"),
   String("address"),
   Identifier("address"),
   Identifier("warning.if.empty"),
   Identifier("institution"),
   Identifier("empty\$"),
   Identifier("address"),
   Identifier("empty\$"),
   Identifier("and"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("author"), Identifier("empty\$"), Identifier("institution"), Identifier("empty\$"), Identifier("or"), FunctionLiteral(Any[Identifier("institution"), String("\\APACaddressInstitution{")]), FunctionLiteral(Any[Identifier("author"), Identifier("institution"), Identifier("="), String("author"), Identifier("institution"), Identifier("="), Identifier("or"), String("Author"), Identifier("institution"), Identifier("="), Identifier("or"), FunctionLiteral(Any[Identifier("author"), String("\\APACaddressInstitutionEqAuth{")]), FunctionLiteral(Any[Identifier("institution"), String("\\APACaddressInstitution{")]), Identifier("if\$")]), Identifier("if\$"), Identifier("address"), String(""), Identifier("connect.check"), String("}{"), Identifier("*"), Identifier("swap\$"), String(""), Identifier("connect.check"), String("}"), Identifier("*")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("techreport")],
  Any[Identifier("author"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("editor"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("format.tr.title.number"), Identifier("output.dot.new.block"), Identifier("format.year.month.day.check"), Identifier("add.period\$")]), FunctionLiteral(Any[Identifier("format.editors.as.authors"), Identifier("start.new.block"), Identifier("format.year.month.day.check"), Identifier("output.dot.new.block"), Identifier("format.tr.title.number"), Identifier("add.period\$")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("format.authors"), Identifier("start.new.block"), Identifier("format.year.month.day.check"), Identifier("output.dot.new.block"), Identifier("format.tr.title.number"), Identifier("add.period\$")]),
   Identifier("if\$"),
   Identifier("format.address.institution.check"),
   Identifier("format.howpublished"),
   Identifier("add.period\$"),
   Identifier("url"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("format.url")]),
   Identifier("if\$"),
   Identifier("note"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("format.note")]),
   Identifier("if\$"),
   Identifier("fin.entry")]],
 Any["FUNCTION",
  Any[Identifier("intechreport")],
  Any[Identifier("author"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("editor.ne.trans"), FunctionLiteral(Any[Identifier("format.atitle.trans.check")]), FunctionLiteral(Any[Identifier("format.atitle.check")]), Identifier("if\$"), Identifier("output.new.block"), Identifier("format.year.month.day.check"), Identifier("output.dot.new.block")]),
   FunctionLiteral(Any[Identifier("format.authors"), Identifier("start.new.block"), Identifier("format.year.month.day.check"), Identifier("output.dot.new.block"), Identifier("editor.ne.trans"), FunctionLiteral(Any[Identifier("format.atitle.trans.check")]), FunctionLiteral(Any[Identifier("format.atitle.check")]), Identifier("if\$"), Identifier("output.new.block")]),
   Identifier("if\$"),
   Identifier("format.in.editors.trans"),
   String("\\APACbVolEdTRpgs{"),
   Identifier("format.bvol.edition.check"),
   Identifier("*"),
   String("}{"),
   Identifier("*"),
   Identifier("format.tr.number"),
   Identifier("*"),
   String("}{"),
   Identifier("*"),
   Identifier("pages"),
   Identifier("format.bpages.check"),
   Identifier("*"),
   String("}"),
   Identifier("*"),
   Identifier("booktitle"),
   Identifier("format.btitle.connect"),
   Identifier("*"),
   Identifier("add.period\$"),
   Identifier("format.address.institution.check"),
   Identifier("format.howpublished"),
   Identifier("add.period\$"),
   Identifier("url"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("format.url")]),
   Identifier("if\$"),
   Identifier("format.orig.note"),
   Identifier("fin.entry")]],
 Any["FUNCTION",
  Any[Identifier("lecture")],
  Any[Identifier("author"),
   Identifier("empty\$"),
   FunctionLiteral(Any[String("author"), Identifier("author"), Identifier("warning.if.empty")]),
   FunctionLiteral(Any[Identifier("format.authors"), Identifier("start.new.block")]),
   Identifier("if\$"),
   Identifier("format.year.month.day.check"),
   Identifier("output.dot.new.block"),
   Identifier("symposium"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("format.betitle.check"), Identifier("title"), Identifier("format.btitle.connect"), Identifier("output.new.block"), Identifier("howpublished"), Identifier("empty\$"), FunctionLiteral(Any[String("symposium and howpublished missing in "), Identifier("cite\$"), Identifier("*"), Identifier("warning\$"), String("")]), FunctionLiteral(Any[String("\\APAChowpublished{"), Identifier("howpublished"), Identifier("*"), String("}"), Identifier("*")]), Identifier("if\$"), Identifier("address"), Identifier("connect.with.comma.check")]),
   FunctionLiteral(Any[Identifier("format.atitle.type.check"), Identifier("output.new.block"), String("\\BIn{} "), Identifier("chair"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("chair"), Identifier("format.editor.names"), Identifier("chair"), Identifier("num.names\$"), Integer(1), Identifier(">"), FunctionLiteral(Any[String("(\\BCHAIRS)")]), FunctionLiteral(Any[String("(\\BCHAIR)")]), Identifier("if\$"), Identifier("connect.with.space.check"), Identifier("*"), String(", "), Identifier("*")]), Identifier("if\$"), Identifier("symposium"), Identifier("format.btitle.no.dot"), Identifier("*"), Identifier("format.howpublished"), Identifier("address"), Identifier("connect.with.comma.check")]),
   Identifier("if\$"),
   Identifier("add.period\$"),
   Identifier("url"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("format.url")]),
   Identifier("if\$"),
   Identifier("note"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("format.note")]),
   Identifier("if\$"),
   Identifier("fin.entry")]],
 Any["FUNCTION",
  Any[Identifier("format.type.school")],
  Any[Identifier("type"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("pop\$"), Identifier("type"), String("t"), Identifier("change.case\$")]),
   Identifier("if\$"),
   Identifier("school"),
   Identifier("connect.with.comma.check")]],
 Any["FUNCTION",
  Any[Identifier("thesis")],
  Any[Identifier("author"),
   Identifier("empty\$"),
   FunctionLiteral(Any[String("author"), Identifier("author"), Identifier("warning.if.empty")]),
   FunctionLiteral(Any[Identifier("format.authors"), Identifier("start.new.block")]),
   Identifier("if\$"),
   Identifier("format.year.check"),
   Identifier("output.dot.new.block"),
   Identifier("journal"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("format.btitle.vol.edition"), Identifier("output.dot.new.block"), Identifier("swap\$"), Identifier("pop\$"), Identifier("format.type.school"), Identifier("address"), Identifier("connect.with.comma.check")]),
   FunctionLiteral(Any[Identifier("pop\$"), Identifier("type"), Identifier("empty\$"), Identifier("school"), Identifier("empty\$"), Identifier("originalyear"), Identifier("empty\$"), Identifier("and"), Identifier("and"), FunctionLiteral(Any[Identifier("pop\$"), String("")]), FunctionLiteral(Any[Identifier("format.type.school"), Identifier("originalyear"), Identifier("connect.with.comma.check"), Identifier("parenthesize.check")]), Identifier("if\$"), Identifier("format.aetitle.check"), Identifier("swap\$"), Identifier("connect.with.space.check"), String("title"), Identifier("title"), Identifier("warning.if.empty"), Identifier("title"), Identifier("format.atitle.connect"), Identifier("output.new.block"), Identifier("pages"), Identifier("format.journal.vol.num.pages.check")]),
   Identifier("if\$"),
   Identifier("format.howpublished"),
   Identifier("add.period\$"),
   Identifier("url"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("format.url")]),
   Identifier("if\$"),
   Identifier("note"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("format.note")]),
   Identifier("if\$"),
   Identifier("fin.entry")]],
 Any["FUNCTION",
  Any[Identifier("phdthesis")],
  Any[String("\\BPhD"), String("\\BUPhD"), Identifier("thesis")]],
 Any["FUNCTION",
  Any[Identifier("mastersthesis")],
  Any[String("\\BMTh"), String("\\BUMTh"), Identifier("thesis")]],
 Any["FUNCTION",
  Any[Identifier("format.btitle.type.num")],
  Any[Identifier("format.betitle.check"),
   Identifier("format.bvol.edition"),
   Identifier("connect.with.space.check"),
   Identifier("format.type.number"),
   Identifier("connect.with.space.check"),
   Identifier("title"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("add.period\$")]),
   FunctionLiteral(Any[Identifier("title"), Identifier("format.btitle.connect")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("format.mtitle.type.num")],
  Any[Identifier("format.aetitle.check"),
   Identifier("format.bvol.edition"),
   Identifier("connect.with.space.check"),
   Identifier("type.2"),
   String("\\bibmessage"),
   Identifier("="),
   FunctionLiteral(Any[Identifier("number"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("type.2"), Identifier("number"), Identifier("tie.or.space.connect"), Identifier("bracket.check"), Identifier("connect.with.space.check")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("format.type.number"), Identifier("connect.with.space.check")]),
   Identifier("if\$"),
   Identifier("title"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("add.period\$")]),
   FunctionLiteral(Any[Identifier("title"), Identifier("format.atitle.connect")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("output.misctitle.type.num")],
  Any[Identifier("type.2"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("format.btitle.type.num")]),
   FunctionLiteral(Any[Identifier("type.2"), String("\\bibmessage"), Identifier("="), Identifier("type.2"), String("\\bibcomputerprogram"), Identifier("="), Identifier("or"), Identifier("type.2"), String("\\bibcomputerprogrammanual"), Identifier("="), Identifier("or"), Identifier("type.2"), String("\\bibcomputerprogramandmanual"), Identifier("="), Identifier("or"), Identifier("type.2"), String("\\bibcomputersoftware"), Identifier("="), Identifier("or"), Identifier("type.2"), String("\\bibcomputersoftwaremanual"), Identifier("="), Identifier("or"), Identifier("type.2"), String("\\bibcomputersoftwareandmanual"), Identifier("="), Identifier("or"), Identifier("type.2"), String("\\bibprogramminglanguage"), Identifier("="), Identifier("or"), FunctionLiteral(Any[Identifier("format.mtitle.type.num")]), FunctionLiteral(Any[Identifier("format.btitle.type.num")]), Identifier("if\$")]),
   Identifier("if\$")]],
 Any["FUNCTION",
  Any[Identifier("unpublished")],
  Any[Identifier("check.relevant.fields"),
   Identifier("author"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("editor"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("format.btitle.type.num"), Identifier("output.new.block"), Identifier("format.year.month.day.check"), Identifier("add.period\$")]), FunctionLiteral(Any[Identifier("format.editors.as.authors"), Identifier("start.new.block"), Identifier("format.year.month.day.check"), Identifier("output.dot.new.block"), Identifier("format.btitle.type.num")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("format.authors"), Identifier("start.new.block"), Identifier("format.year.month.day.check"), Identifier("output.dot.new.block"), Identifier("format.btitle.type.num")]),
   Identifier("if\$"),
   Identifier("howpublished"),
   Identifier("empty\$"),
   Identifier("organization"),
   Identifier("empty\$"),
   Identifier("and"),
   Identifier("address"),
   Identifier("empty\$"),
   Identifier("and"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("output.new.block"), String("\\APAChowpublished{"), String("}"), Identifier("howpublished"), Identifier("enclose.check"), Identifier("organization"), Identifier("connect.with.comma.check"), Identifier("address"), Identifier("connect.with.comma.check"), Identifier("add.period\$")]),
   Identifier("if\$"),
   Identifier("url"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("format.url")]),
   Identifier("if\$"),
   Identifier("note"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("format.note")]),
   Identifier("if\$"),
   Identifier("fin.entry")]],
 Any["FUNCTION",
  Any[Identifier("misc")],
  Any[Identifier("type.2"),
   Identifier("empty\$"),
   Identifier("type"),
   Identifier("empty\$"),
   Identifier("not"),
   Identifier("and"),
   FunctionLiteral(Any[Identifier("type"), QuotedVar("type.2"), Identifier(":=")]),
   QuotedVar("skip\$"),
   Identifier("if\$"),
   Identifier("author"),
   Identifier("empty\$"),
   FunctionLiteral(Any[Identifier("editor"), Identifier("empty\$"), FunctionLiteral(Any[Identifier("title"), Identifier("empty\$"), Identifier("type.2"), Identifier("empty\$"), Identifier("and"), FunctionLiteral(Any[Identifier("howpublished"), Identifier("empty\$"), FunctionLiteral(Any[String("No author, editor, title, type, and howpublished in "), Identifier("cite\$"), Identifier("*"), Identifier("warning\$"), String("")]), FunctionLiteral(Any[String("\\APAChowpublished{"), Identifier("howpublished"), Identifier("*"), String("}"), Identifier("*"), Identifier("add.period\$")]), Identifier("if\$"), Identifier("format.year.month.day.check"), Identifier("add.period\$")]), FunctionLiteral(Any[Identifier("output.misctitle.type.num"), Identifier("output.new.block"), Identifier("format.year.month.day.check"), Identifier("add.period\$"), Identifier("format.howpublished"), Identifier("add.period\$")]), Identifier("if\$")]), FunctionLiteral(Any[Identifier("format.editors.as.authors"), Identifier("start.new.block"), Identifier("format.year.month.day.check"), Identifier("output.dot.new.block"), Identifier("output.misctitle.type.num"), Identifier("format.howpublished"), Identifier("add.period\$")]), Identifier("if\$")]),
   FunctionLiteral(Any[Identifier("format.authors"), Identifier("start.new.block"), Identifier("format.year.month.day.check"), Identifier("output.dot.new.block"), Identifier("output.misctitle.type.num"), Identifier("format.howpublished"), Identifier("add.period\$")]),
   Identifier("if\$"),
   Identifier("address"),
   Identifier("empty\$"),
   Identifier("publisher"),
   Identifier("empty\$"),
   Identifier("and"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("format.address.publisher"), Identifier("add.period\$")]),
   Identifier("if\$"),
   Identifier("url"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("format.url")]),
   Identifier("if\$"),
   Identifier("note"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("duplicate\$"), Identifier("empty\$"), QuotedVar("skip\$"), FunctionLiteral(Any[Identifier("output.new.block")]), Identifier("if\$"), Identifier("format.note")]),
   Identifier("if\$"),
   Identifier("fin.entry")]],
 Any["FUNCTION",
  Any[Identifier("literal")],
  Any[String("key"),
   Identifier("key"),
   Identifier("warning.if.empty"),
   String("text"),
   Identifier("text"),
   Identifier("warning.if.empty"),
   Identifier("text"),
   Identifier("empty\$"),
   FunctionLiteral(Any[String("")]),
   FunctionLiteral(Any[Identifier("text")]),
   Identifier("if\$"),
   Identifier("fin.entry")]],
 Any["FUNCTION",
  Any[Identifier("manual")],
  Any[Identifier("type"),
   Identifier("empty\$"),
   FunctionLiteral(Any[String("\\bibcomputersoftwaremanual"), QuotedVar("type.2"), Identifier(":=")]),
   QuotedVar("skip\$"),
   Identifier("if\$"),
   Identifier("misc")]],
 Any["FUNCTION", Any[Identifier("booklet")], Any[Identifier("misc")]],
 Any["FUNCTION", Any[Identifier("inbook")], Any[Identifier("incollection")]],
 Any["FUNCTION", Any[Identifier("inproceedings")], Any[Identifier("incollection")]],
 Any["FUNCTION", Any[Identifier("conference")], Any[Identifier("inproceedings")]],
 Any["FUNCTION", Any[Identifier("proceedings")], Any[Identifier("misc")]],
 Any["FUNCTION", Any[Identifier("default.type")], Any[Identifier("misc")]],
 Any["FUNCTION",
  Any[Identifier("initialize")],
  Any[Integer(6), QuotedVar("name.max"), Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("init.old.number")],
  Any[Integer(0), QuotedVar("old.number"), Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("init.old.label")],
  Any[String("zzzzzz"), QuotedVar("old.label"), Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("init.cite.initials.add.to.year")],
  Any[Integer(0),
   QuotedVar("cite.initials"),
   Identifier(":="),
   Integer(0),
   QuotedVar("add.to.year"),
   Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("move.forward")],
  Any[Integer(1), QuotedVar("forward"), Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("move.backward")],
  Any[Integer(0), QuotedVar("forward"), Identifier(":=")]],
 Any["FUNCTION",
  Any[Identifier("begin.bib")],
  Any[Identifier("preamble\$"),
   Identifier("empty\$"),
   QuotedVar("skip\$"),
   FunctionLiteral(Any[Identifier("preamble\$"), Identifier("write\$"), Identifier("newline\$")]),
   Identifier("if\$"),
   String("\\begin{thebibliography}{}"),
   Identifier("write\$"),
   Identifier("newline\$")]],
 Any["FUNCTION",
  Any[Identifier("end.bib")],
  Any[Identifier("newline\$"),
   String("\\end{thebibliography}"),
   Identifier("write\$"),
   Identifier("newline\$")]],
 Any["FUNCTION",
  Any[Identifier("write.bbl.entry")],
  Any[Identifier("make.cite.labels"), Identifier("call.type\$")]],
 Any["READ"],
 Any["EXECUTE", Any[Identifier("identify.apacite.version")]],
 Any["EXECUTE", Any[Identifier("initialize")]],
 Any["ITERATE", Any[Identifier("make.sort.title")]],
 Any["SORT"],
 Any["EXECUTE", Any[Identifier("init.old.number")]],
 Any["EXECUTE", Any[Identifier("init.old.label")]],
 Any["ITERATE", Any[Identifier("make.title.number")]],
 Any["ITERATE", Any[Identifier("make.tentative.sort.label")]],
 Any["SORT"],
 Any["ITERATE", Any[Identifier("init.cite.initials.add.to.year")]],
 Any["EXECUTE", Any[Identifier("init.initials")]],
 Any["ITERATE", Any[Identifier("check.add.initials")]],
 Any["EXECUTE", Any[Identifier("init.initials")]],
 Any["REVERSE", Any[Identifier("check.add.initials")]],
 Any["ITERATE", Any[Identifier("tentative.cite.num.names")]],
 Any["EXECUTE", Any[Identifier("init.cite.num.names")]],
 Any["EXECUTE", Any[Identifier("move.forward")]],
 Any["ITERATE", Any[Identifier("definitive.cite.num.names")]],
 Any["EXECUTE", Any[Identifier("init.cite.num.names")]],
 Any["EXECUTE", Any[Identifier("move.backward")]],
 Any["REVERSE", Any[Identifier("definitive.cite.num.names")]],
 Any["ITERATE", Any[Identifier("make.final.sort.key")]],
 Any["SORT"],
 Any["EXECUTE", Any[Identifier("begin.bib")]],
 Any["ITERATE", Any[Identifier("write.bbl.entry")]],
 Any["EXECUTE", Any[Identifier("end.bib")]]]
